{"version":3,"sources":["components/Context.js","api/ApiProperties.js","api/Post.js","api/Get.js","api/Delete.js","api/Put.js","hooks/useFetch.js","pages/SignUp.js","components/users/ConfirmationModalUsers.js","pages/Users.js","utility/Accounts.js","pages/LogIn.js","pages/UserUpdate.js","components/tanks/ConfirmationModal.js","pages/Tanks.js","utility/TanksUtility.js","pages/AddTank.js","components/historical/HistoricalChart.js","pages/Historic.js","components/details_tank/DataSection.js","components/details_tank/VisualizationSection.js","pages/DetailsTank.js","components/ChartComponent.js","components/TanksList.js","pages/TanksMonitor.js","components/SideBar.js","components/NavBar.js","pages/Profile.js","pages/ModifyTank.js","images/historicchart.PNG","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","NavigationContext","TankContext","apiRoute","socketApiRoute","apiModes","LOGIN","RESEND_CONFIRMATION_EMAIL","SIGNUP","GETUSER","FETCHTANKS","ADDTANK","FETCHTANK","DELETETANK","FETCHUSERS","FETCHUSER","UPDATEUSER","DELETEUSER","FETCHHISTORIC","BuildUrl","mode","urlResult","console","log","UPDATETANK","POST","apiMode","a","authorization","payload","url","options","method","headers","body","JSON","stringify","accessToken","fetch","response","GET","httpGetParams","getOptions","DELETE","PUT","buildHttpGetParams","tankId","company","email","useFetch","initialValue","useState","httpMethod","json","SignUpPage","navigate","useNavigate","document","title","name","lastName","password","passwordVerify","user","setUser","doFetch","showPassword","showVerifyPassword","buttonDisabled","isBusy","requestMessage","requestMsgColor","passwordVerified","componentState","setComponentState","handleChange","e","prop","target","value","handleOnClick","message","fontColor","jsonResponse","passwordMatch","preventDefault","msg","status","style","textAlign","marginTop","Box","sx","borderRadius","width","height","paddingTop","paddingBottom","marginLeft","marginRight","background","TextField","marginBottom","id","label","variant","onChange","FormControl","m","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","margin","CircularProgress","display","color","severity","Button","backgroundColor","disabled","ConfirmationModal","props","open","userSelected","setOpen","handleDelete","deleteIsBusy","deleteModalMsg","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Users","React","useContext","navigation","setNavigation","users","setUsers","columns","field","headerName","hide","description","sortable","valueGetter","params","getValue","renderCell","renderForAdminRole","localStorage","getItem","row","role","Fragment","String","replace","state","Tooltip","placement","jsonData","fetchUsers","useEffect","currentPage","padding","fontWeight","rows","map","item","index","pageSize","rowsPerPageOptions","roles","sideBarItems","visualizationOptions","userOptions","tanksOptions","errors","emailError","passwordError","returnTanksOptions","userRole","returnUserOptions","slice","returnVisualization","isValidPassword","fieldText","text","trim","undefined","isFieldEmpty","LogInPage","emailText","values","setValues","validEmail","validPassword","progressVisibility","disabledButton","responseTextMessage","responseMsgTextColor","busyProps","setBusyProps","event","handleLogin","test","toLowerCase","userAuthenticated","setItem","access_token","refresh_token","last_name","resendConfirmationEmail","toEmail","fontSize","onKeyUp","code","textMessage","statusJsx","href","loginGuiStatusManager","UserUpdate","location","useLocation","alertSeverity","pageState","setPageState","errorHandler","error","messageInterpreted","handleUpdateUser","fetchUser","flexDirection","justifyContent","Select","labelId","MenuItem","tankSelected","handleClose","rowsDummy","firstName","age","Tanks","setTankContextData","tankContextData","setRows","fetchTanks","tanks","length","startIcon","validateTankRegister","tank","errorMessage","WtrLvlMin","WtrLvlMax","OxygenPercentageMin","OxygenPercentageMax","PhMin","PhMax","parseFloat","AddTank","setTank","fieldsValidationErrorString","displayAlert","updateTank","handleAddTank","tankValidationMessage","locSeverity","authenticateUser","component","noValidate","autoComplete","Divider","HistoricalChart","data","datesRange","WtrLvlValues","OxygenPercentageValues","PhValues","timestamp","dataForGraph","setDataForGraph","tankHistoricDataFiltered","filter","element","tank_name","startDateUnix","Date","startDate","getTime","endDateUnix","endDate","tankHistoricDataSelected","forEach","timestampValue","push","date","getFullYear","getMonth","getDate","labels","datasets","fill","borderColor","tension","Alert","forwardRef","ref","elevation","Historic","setSocket","setDatesRange","setTanks","setData","notificationMessage","notificationType","reason","stablishSocketConnection","socket","socketIOClient","on","emit","msj","historicData","updateHistoricData","err","handleDateRangeChange","property","oldDatesRanges","newDatesRanges","alert","paramData","oldData","newData","tankNameStringIndex","indexOf","tankDataObject","WtrLvl","OxygenPercentage","Ph","processRequestedHistoric","tankNames","stablishConnection","close","fullWidth","tankString","defaultValue","InputLabelProps","shrink","Snackbar","autoHideDuration","DataSection","textDecoration","to","Stack","direction","spacing","VisualizationSection","tankParameters","setOptions","biggestNumber","numArray","Math","max","apply","indexAxis","scales","y","min","styled","Paper","typography","body2","palette","secondary","DetailsTank","setTankParameters","updateDashboard","tankObjects","tankData","wtrLvlValue","oxygenPercentageValue","phValue","parameters","tankMinValue","tankMaxValue","xs","sm","md","ChartComponent","scaleRanges","setScaleRanges","tanksSelected","tanksData","category","maxScaleField","setMaxScaleField","graph","setGraph","waterLevel","oxygenPercentage","ph","dataToDisplay","minWidth","parseInt","TanksList","checked","setChecked","allTanks","updateTanksSelected","handleToggle","currentIndex","newChecked","splice","List","maxWidth","ListItem","disablePadding","ListItemButton","dense","ListItemIcon","Checkbox","tabIndex","disableRipple","inputProps","ListItemText","fontStyle","primary","categories","BarChart","setTanksSelected","setTanksData","setCategory","connectionStablished","FormLabel","RadioGroup","FormControlLabel","control","Radio","alignItems","mt","stringToColor","string","i","hash","charCodeAt","toString","substr","SideBar","toggleDrawer","anchor","renderListItem","icon","button","Drawer","Avatar","bgcolor","children","split","onKeyDown","NavBar","linkStyle","buttonStyle","left","setState","key","flexGrow","top","right","zIndex","AppBar","Toolbar","size","mr","Typography","Item","skelethonStyle","Profile","localUser","setLocalUser","getUser","Skeleton","ModifyTank","updateTankParametersFields","parameter","fetchTank","errorAction","handleUpdateTank","Error","includes","App","providerNavigation","useMemo","providerUser","providerTank","Provider","path","TanksMonitor","LocalizationProvider","dateAdapter","AdapterDateFns","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12ec2c0b.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nexport const UserContext = createContext(null);\nexport const NavigationContext = createContext(null);\nexport const TankContext = createContext(null);","var timeOut = 3000;\nconst apiRoute = \"https://api.ratizales.mx\";\nconst socketApiRoute = \"https://api.ratizales.mx/private\";\nconst apiModes = {\n\tLOGIN: \"login\",\n\tRESEND_CONFIRMATION_EMAIL: \"resend_confirmation_email\",\n\tSIGNUP: \"signup\",\n\tGETUSER: \"getuser\",\n\tFETCHTANKS: \"fetchtanks\",\n\tADDTANK: \"addtank\",\n\tFETCHTANK: \"fetchtank\",\n\tDELETETANK: \"deletetank\",\n\tFETCHUSERS: \"fetchusers\",\n\tFETCHUSER: \"fetchuser\",\n\tUPDATEUSER: \"updateuser\",\n\tDELETEUSER: \"deleteuser\",\n\tFETCHHISTORIC: \"fetch_historic\"\n};\n\nfunction BuildUrl(mode) {\n\tlet urlResult = \"\";\n\tconsole.log(mode);\n\tswitch (mode) {\n\t\tcase apiModes.LOGIN:\n\t\t\turlResult = `${apiRoute}/auth/login`;\n\t\t\tbreak;\n\t\tcase apiModes.SIGNUP:\n\t\t\turlResult = `${apiRoute}/auth/add-user`;\n\t\t\tbreak;\n\t\tcase apiModes.GETUSER:\n\t\t\turlResult = `${apiRoute}/auth/get-user`;\n\t\t\tbreak;\n\t\tcase apiModes.FETCHTANKS:\n\t\t\turlResult = `${apiRoute}/api/fetch-tanks`;\n\t\t\tbreak;\n\t\tcase apiModes.FETCHTANK:\n\t\t\turlResult = `${apiRoute}/api/fetch-tank`;\n\t\t\tbreak;\n\t\tcase apiModes.ADDTANK:\n\t\t\turlResult = `${apiRoute}/api/add-tank`;\n\t\t\tbreak;\n\t\tcase apiModes.UPDATETANK:\n\t\t\turlResult = `${apiRoute}/api/update-tank`;\n\t\t\tbreak;\n\t\tcase apiModes.DELETETANK:\n\t\t\turlResult = `${apiRoute}/api/delete-tank`;\n\t\t\tbreak;\n\t\tcase apiModes.FETCHUSERS:\n\t\t\turlResult = `${apiRoute}/api/fetch-users`;\n\t\t\tbreak;\n\t\tcase apiModes.FETCHUSER:\n\t\t\turlResult = `${apiRoute}/api/fetch-user`;\n\t\t\tbreak;\n\t\tcase apiModes.UPDATEUSER:\n\t\t\turlResult = `${apiRoute}/api/update-user`;\n\t\t\tbreak;\n\t\tcase apiModes.DELETEUSER:\n\t\t\turlResult = `${apiRoute}/api/delete-user`;\n\t\t\tbreak;\n\t\tcase apiModes.FETCHHISTORIC:\n\t\t\turlResult = `${apiRoute}/api/fetch-historic`;\n\t\t\tbreak;\n\t\tcase apiModes.RESEND_CONFIRMATION_EMAIL:\n\t\t\turlResult = `${apiRoute}/auth/resend-confirmation-email`;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\turlResult = \"\";\n\t}\n\n\tconsole.log(urlResult);\n\treturn urlResult;\n}\n\nexport { apiModes, BuildUrl, apiRoute, socketApiRoute };\n","import { apiModes, BuildUrl } from \"./ApiProperties\";\n\nasync function POST(apiMode, authorization=false, payload) {\n    var url = BuildUrl(apiMode);\n    var options = {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n    };\n    if(authorization) {\n        options.headers = {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${payload.accessToken}`\n        };\n    }\n    console.log(\"url:  \" + url);\n    console.log(payload);\n    var response = await fetch(url, options);\n    return response;\n}\n\nexport { POST };","import { apiRoute, BuildUrl, apiModes } from \"./ApiProperties\";\n\nasync function GET(mode, authorization=false, payload=null, httpGetParams=null) {\n    const options = getOptions(authorization, payload);\n    var response = null;\n    console.log(mode);\n    const url = BuildUrl(mode);\n    console.log(url);\n\n    if(!httpGetParams) {\n        response = await fetch(url, options);\n    }\n    else {\n        //if there is a string passed as endpoint in httpGetParams\n        console.log(`${url}${httpGetParams}`);\n        console.log(options);\n        response = await fetch(`${url}${httpGetParams}`, options);\n    }\n    return response;\n}\n\nfunction getOptions(authorization, payload) {\n    const options = {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    if(authorization) {\n        options.headers = {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${payload.accessToken}`\n        }\n    }\n    return options\n}\n\nexport { GET };","import { apiModes, BuildUrl } from \"./ApiProperties\";\n\nasync function DELETE(apiMode, authorization=false, payload) {\n    var url = BuildUrl(apiMode);\n    var options = {\n        method: 'DELETE',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n    };\n    if(authorization) {\n        options.headers = {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${payload.accessToken}`\n        };\n    }\n    console.log(\"----------DELETE OPTIONS----------\");\n    console.log(options);\n    var response = await fetch(url, options);\n    return response;\n}\n\nexport { DELETE };","import { apiModes, BuildUrl } from \"./ApiProperties\";\n\nasync function PUT(apiMode, authorization=false, payload) {\n    var url = BuildUrl(apiMode);\n    var options = {\n        method: 'PUT',\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n    };\n    if(authorization) {\n        options.headers = {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${payload.accessToken}`\n        };\n    }\n    console.log(\"----------PUT OPTIONS----------\");\n    console.log(options);\n    console.log(url);\n    var response = await fetch(url, options);\n    return response;\n}\n\nexport { PUT };","import { useEffect, useState } from \"react\";\nimport { POST } from \"../api/Post\";\nimport { GET } from \"../api/Get\";\nimport { DELETE } from \"../api/Delete\";\nimport { PUT } from \"../api/Put\";\nimport { apiModes } from \"../api/ApiProperties\";\n\nfunction buildHttpGetParams(apiMode, payload) {\n\tlet httpGetParams = \"\";\n\tswitch (apiMode) {\n\t\tcase apiModes.FETCHTANK:\n\t\t\thttpGetParams = `?tankId=${payload.tankId}`;\n\t\t\tbreak;\n\t\tcase apiModes.FETCHUSERS:\n\t\t\thttpGetParams = `?company=${payload.company}`;\n\t\t\tbreak;\n\t\tcase apiModes.FETCHUSER:\n\t\t\thttpGetParams = `?email=${payload.email}`;\n\t\t\tbreak;\n\t\tcase apiModes.FETCHHISTORIC:\n\t\t\thttpGetParams = `?company=${payload.company}`;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\thttpGetParams = null;\n\t}\n\n\treturn httpGetParams;\n}\n\nexport default function useFetch(initialValue) {\n\t//Make fetch call\n\t//check if msg is Token has expired. if so then navigate to login page.\n\t//\n\tconst [value, setValue] = useState(initialValue);\n\n\tconst doFetch = async (httpMethod, apiMode, authorization, payload) => {\n\t\tlet response = null;\n\t\tif (httpMethod === \"POST\") {\n\t\t\tresponse = await POST(apiMode, authorization, payload);\n\t\t} else if (httpMethod === \"GET\") {\n\t\t\tconst httpGetParams = buildHttpGetParams(apiMode, payload);\n\t\t\tresponse = await GET(apiMode, authorization, payload, httpGetParams);\n\t\t} else if (httpMethod === \"DELETE\") {\n\t\t\tresponse = await DELETE(apiMode, authorization, payload);\n\t\t}\n\t\telse if (httpMethod === \"PUT\") {\n\t\t\tresponse = await PUT(apiMode, authorization, payload);\n\t\t}\n\n\t\treturn await response.json();\n\t};\n\n\treturn [value, setValue, doFetch];\n}\n","import React, { useContext, useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Visibility from '@mui/icons-material/Visibility';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport {\n    InputLabel,\n    FormControl,\n    OutlinedInput,\n    InputAdornment,\n    IconButton,\n    CircularProgress\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from \"../components/Context\";\n\nimport useFetch from \"../hooks/useFetch\";\nimport { apiModes } from \"../api/ApiProperties\";\n\n/*\n//import { useTheme, useThemeUpdate } from \"../ThemeContext\";\nconst darkTheme = useTheme();\n    const toggleTheme = useThemeUpdate();\n    const themeStyles = {\n        background: darkTheme? \"#333\" : \"#CCC\",\n        color: darkTheme? \"#CCC\" : \"#333\",\n        padding: \"2rem\",\n        margin: \"2rem\"\n    };\n*/\nexport default function SignUpPage() {\n    //const {value, setValue} = useContext(UserContext); //getting the data passed from app.js\n    const navigate = useNavigate();\n    document.title = \"Sign Up\";\n\n    const [user, setUser, doFetch] = useFetch({\n        name: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        passwordVerify: \"\",\n        company: \"\"\n    })\n    const [componentState, setComponentState] = useState({\n        showPassword: false,\n        showVerifyPassword: false,\n        buttonDisabled: false,\n        isBusy: \"none\",\n        requestMessage: \"\",\n        requestMsgColor: \"#000000\",\n        passwordVerified: false\n    });\n\n    const handleChange = (e, prop) => {\n        setUser({\n            ...user,\n            [prop]: e.target.value\n        })\n    }\n    const handleOnClick = async (e) => {\n        try {\n            var message = \"\";\n            var fontColor = \"\";\n            var response = null;\n            var jsonResponse = null;\n            const passwordMatch = (user.password === user.passwordVerify);\n            e.preventDefault();\n            setComponentState({\n                ...componentState,\n                isBusy: \"block\",\n                buttonDisabled: true\n            });\n\n            if (passwordMatch) {\n                jsonResponse = await doFetch(\"POST\", apiModes.SIGNUP, false, user);\n                console.log(jsonResponse);\n                if (jsonResponse.msg === \"User already registered\" || jsonResponse.msg === \"Succesfully added user\") {\n                    fontColor = \"#03945f\";\n                }\n                else {\n                    fontColor = \"#940303\";\n                }\n                message = jsonResponse.msg;\n            }\n            else {\n                message = \"Passwords do not match\";\n                fontColor = \"#940303\";\n            }\n\n            setComponentState({\n                ...componentState,\n                isBusy: \"none\",\n                buttonDisabled: false,\n                requestMessage: message,\n                requestMsgColor: fontColor\n            });\n\n            if (response && response.status === 200) {\n                navigate(\"/log-in\");\n            }\n        }\n        catch (error) {\n            console.log(typeof (error));\n            console.log(typeof (error.message));\n            if (error.message === 'Failed to fetch') {\n                setComponentState({\n                    ...componentState,\n                    isBusy: \"none\",\n                    buttonDisabled: false,\n                    requestMessage: \"Please check your connection and try again\",\n                    requestMsgColor: \"#940303\"\n                });\n            }\n        }\n    };\n\n    return (\n        <div style={{ textAlign: \"center\", marginTop: \"90px\" }}>\n            <Box\n                sx={{\n                    borderRadius: \"20px\",\n                    width: \"70%\",\n                    height: \"auto\",\n                    paddingTop: \"20px\",\n                    paddingBottom: \"20px\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    background: \"rgba(232, 250, 255, 0)\"\n                }}>\n                <h1>Sign Up</h1>\n                <div>\n                    <TextField\n                        style={{ width: \"50%\", marginBottom: \"15px\" }}\n                        id=\"outlined-basic\"\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        value={user.name}\n                        onChange={(e) => handleChange(e, 'name')} />\n                </div>\n                <div>\n                    <TextField\n                        style={{ width: \"50%\", marginBottom: \"15px\" }}\n                        id=\"outlined-basic\"\n                        label=\"Last Name\"\n                        variant=\"outlined\"\n                        value={user.lastName}\n                        onChange={(e) => handleChange(e, 'lastName')} />\n                </div>\n                <div>\n                    <TextField\n                        style={{ width: \"50%\", marginBottom: \"10px\" }}\n                        id=\"outlined-basic\"\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        value={user.email}\n                        onChange={(e) => handleChange(e, 'email')} />\n                </div>\n                <div>\n                    <FormControl sx={{ m: 1, width: '50%' }} variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-password\"\n                            type={componentState.showPassword ? 'text' : 'password'}\n                            value={user.password}\n                            onChange={(e) => handleChange(e, 'password')}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={() => setComponentState({\n                                            ...componentState,\n                                            showPassword: !componentState.showPassword\n                                        })}\n                                        onMouseDown={(e) => e.preventDefault()}\n                                        edge=\"end\"\n                                    >\n                                        {componentState.showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            label=\"Password\"\n                        />\n                    </FormControl>\n                </div>\n                <div>\n                    <FormControl sx={{ m: 1, width: '50%' }} variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-adornment-password\">Confirm Password</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-password\"\n                            type={componentState.showVerifyPassword ? 'text' : 'password'}\n                            value={user.passwordVerify}\n                            onChange={(e) => handleChange(e, 'passwordVerify')}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={() => setComponentState({\n                                            ...componentState,\n                                            showVerifyPassword: !componentState.showVerifyPassword\n                                        })}\n                                        onMouseDown={(e) => e.preventDefault()}\n                                        edge=\"end\"\n                                    >\n                                        {componentState.showVerifyPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            label=\"Password\"\n                        />\n                    </FormControl>\n                </div>\n\n                <div style={{ margin: \"auto\" }}>\n                    <TextField\n                        type=\"text\"\n                        style={{ width: \"50%\", marginBottom: \"10px\" }}\n                        id=\"outlined-basic\"\n                        label=\"Company\"\n                        variant=\"outlined\"\n                        value={user.company}\n                        onChange={(e) => handleChange(e, 'company')} />\n                </div>\n                <div style={{ marginBottom: \"15px\" }}>\n                    <CircularProgress\n                        style={{ display: componentState.isBusy, margin: \"auto\" }} />\n                </div>\n                {componentState.requestMessage ? (\n                    <div style={{ marginBottom: \"15px\", color: componentState.requestMsgColor }}>\n                        <Alert\n                            style={{ width: \"40%\", margin: \"auto\" }}\n                            severity={(componentState.requestMsgColor === \"#03945f\") ? \"success\" : \"error\"}>\n                            {componentState.requestMessage}\n                        </Alert>\n                    </div>\n                ) : null}\n                <Button\n                    sx={{\n                        width: \"40%\",\n                        borderRadius: \"20px\",\n                        marginBottom: \"15px\",\n                        backgroundColor: \"#54008c\"\n                    }}\n                    onClick={(e) => handleOnClick(e)}\n                    variant=\"contained\"\n                    disabled={componentState.buttonDisabled}>\n                    Sign Up\n                </Button>\n            </Box>\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\nexport default function ConfirmationModal(props) {\n    const {\n        open,\n        userSelected,\n        setOpen,\n        handleDelete,\n        deleteIsBusy,\n        deleteModalMsg\n    } = props;\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n    return (\n        <div>\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby='responsive-dialog-title'>\n                <DialogTitle id='responsive-dialog-title'>\n                    {`User ${userSelected} will be deleted`}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Are you sure?. This action cannot be undone.\n                    </DialogContentText>\n                </DialogContent>\n                {deleteModalMsg ? (\n                    <div\n                        style={{\n                            marginLeft: \"auto\",\n                            marginRight: \"auto\"\n                        }}>\n                        {deleteModalMsg}\n                    </div>\n                ) : null}\n                <div style={{ display: (deleteIsBusy ? \"block\" : \"none\"), marginLeft: \"auto\", marginRight: \"auto\" }}>\n                    <CircularProgress />\n                </div>\n                <DialogActions>\n                    <Button autoFocus onClick={() => setOpen(false)}>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => handleDelete()} autoFocus>\n                        Yes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { useNavigate } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\n\nimport useFetch from \"../hooks/useFetch\";\nimport { apiModes } from \"../api/ApiProperties\";\nimport { UserContext, NavigationContext } from \"../components/Context\";\nimport ConfirmationModalUsers from \"../components/users/ConfirmationModalUsers\";\n\nexport default function Users() {\n\tconst {navigation, setNavigation} = React.useContext(NavigationContext);\n\tconst navigate = useNavigate();\n\tconst [open, setOpen] = useState(false);\n\tconst [componentState, setComponentState] = useState({\n\t\tuserSelected: \"\",\n\t\tdeleteIsBusy: false,\n\t\tdeleteModalMsg: \"\"\n\t});\n\tconst [users, setUsers, doFetch] = useFetch([]);\n\n\tconst columns = [\n\t\t//{ field: \"id\", headerName: \"ID\", width: 70 },\n\t\t{ field: \"name\", headerName: \"User Name\", width: 100 },\n\t\t{ field: \"lastName\", headerName: \"Last Name\", width: 130, hide: false },\n\t\t{\n\t\t\tfield: \"fullName\",\n\t\t\theaderName: \"Full name\",\n\t\t\tdescription: \"This column has a value getter and is not sortable.\",\n\t\t\tsortable: false,\n\t\t\twidth: 160,\n\t\t\thide: true,\n\t\t\tvalueGetter: (params) =>\n\t\t\t\t`${params.getValue(params.id, \"firstName\") || \"\"} ${params.getValue(params.id, \"lastName\") || \"\"\n\t\t\t\t}`,\n\t\t},\n\t\t{ field: \"email\", headerName: \"Email\", width: 200 },\n\t\t{ field: \"role\", headerName: \"Role\", width: 130 },\n\t\t{\n\t\t\tfield: \"action\",\n\t\t\theaderName: \"Options\",\n\t\t\tdescription: \"This column is for action buttons like edit or delete\",\n\t\t\tsortable: false,\n\t\t\twidth: 160,\n\t\t\trenderCell: (params) => {\n\t\t\t\tconst renderForAdminRole = !(localStorage.getItem(\"role\") === \"Administrator\" && params.row.role === 'Supervisor')\n\t\t\t\treturn (\n\t\t\t\t\t<div style={{ margin: \"auto\" }}>\n\t\t\t\t\t\t{renderForAdminRole ?\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"Passed parameter: \" + String(params.row.email));\n\n\t\t\t\t\t\t\t\t\t\tnavigate(\"/update-user\", {\n\t\t\t\t\t\t\t\t\t\t\treplace: false,\n\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\temail: params.row.email,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Tooltip title='Edit' placement='left'>\n\t\t\t\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => {\n\t\t\t\t\t\t\t\t\tsetComponentState({\n\t\t\t\t\t\t\t\t\t\tdeleteModalMsg: \"\"\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t\t\t\t\tsetComponentState({\n\t\t\t\t\t\t\t\t\t\t...componentState,\n\t\t\t\t\t\t\t\t\t\tuserSelected: params.row.email\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Tooltip title='Delete' placement='right-end'>\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t];\n\tconst handleDelete = async () => {\n\t\ttry {\n\t\t\tsetComponentState({\n\t\t\t\tdeleteIsBusy: true,\n\t\t\t\tdeleteModalMsg: \"\"\n\t\t\t});\n\t\t\tconsole.log(\"pressed deleting user \" + String(componentState.userSelected));\n\t\t\tconst jsonData = await doFetch(\"DELETE\", apiModes.DELETEUSER, true, {\n\t\t\t\temail: componentState.userSelected,\n\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t});\n\t\t\tconsole.log(jsonData);\n\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\tnavigate(\"/log-in\");\n\t\t\t}\n\t\t\tif (jsonData.msg === \"Operation Succeded\") {\n\t\t\t\tfetchUsers();\n\t\t\t\tsetOpen(false);\n\t\t\t\tsetComponentState({\n\t\t\t\t\tdeleteIsBusy: false,\n\t\t\t\t\tdeleteModalMsg: jsonData.msg\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tcatch (error) {\n\n\t\t}\n\t};\n\tconst fetchUsers = async () => {\n\t\ttry {\n\t\t\tconst jsonData = await doFetch(\"GET\", apiModes.FETCHUSERS, true, {\n\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\tcompany: localStorage.getItem(\"company\"),\n\t\t\t});\n\t\t\tconsole.log(jsonData);\n\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\tnavigate(\"/log-in\");\n\t\t\t}\n\t\t\tif (jsonData.msg === \"Success Fetching\") {\n\t\t\t\tsetUsers(jsonData.users);\n\t\t\t}\n\t\t} catch (error) { }\n\t};\n\tuseEffect(() => {\n\t\tsetNavigation({\n\t\t\t...navigation,\n\t\t\tcurrentPage: \"Users\"\n\t\t});\n\t\tfetchUsers();\n\t}, []);\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\theight: 400,\n\t\t\t\twidth: \"80%\",\n\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\tmarginRight: \"auto\",\n\t\t\t\tmarginTop: \"100px\",\n\t\t\t\tpadding: \"15px\",\n\t\t\t\tborderRadius: \"10px\",\n\t\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0)\",\n\t\t\t}}>\n\t\t\t<h1 style={{ textAlign: \"center\", fontWeight: 600 }}>Users</h1>\n\n\t\t\t<DataGrid\n\t\t\t\trows={users.map((item, index) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: index + 1,\n\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\tlastName: item.lastName,\n\t\t\t\t\t\temail: item.email,\n\t\t\t\t\t\trole: item.role,\n\t\t\t\t\t};\n\t\t\t\t})}\n\t\t\t\tcolumns={columns}\n\t\t\t\tpageSize={5}\n\t\t\t\trowsPerPageOptions={[5]}\n\t\t\t\tsx={{}}\n\t\t\t/>\n\t\t\t<ConfirmationModalUsers\n\t\t\t\topen={open}\n\t\t\t\tuserSelected={componentState.userSelected}\n\t\t\t\tsetOpen={setOpen}\n\t\t\t\thandleDelete={handleDelete}\n\t\t\t\tdeleteIsBusy={componentState.deleteIsBusy}\n\t\t\t\tdeleteModalMsg={componentState.deleteModalMsg}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import { breadcrumbsClasses } from \"@mui/material\";\n\nconst roles = {\n    OPERATOR: \"Operator\",\n    ADMINISTRATOR: \"Administrator\",\n    SUPERVISOR: \"Supervisor\"\n};\n\nconst sideBarItems = {\n    visualizationOptions: ['Visualization', 'Historic'],\n    userOptions: ['Home', 'Profile', 'Users'],\n    tanksOptions: ['Tanks']\n};\n\nvar errors = {\n    emailError: \"\",\n    passwordError: \"\"\n};\n\nfunction returnTanksOptions(userRole) {\n    let tanksOptions = null;\n\n    switch(userRole) {\n        case roles.SUPERVISOR:\n            tanksOptions = sideBarItems.tanksOptions\n            break;\n        case roles.ADMINISTRATOR:\n            tanksOptions = sideBarItems.tanksOptions\n            break;\n        case roles.OPERATOR:\n            tanksOptions = sideBarItems.tanksOptions;\n            break;\n        default:\n            tanksOptions = null;\n    }\n\n    return tanksOptions;\n}\n\nfunction returnUserOptions(userRole) {\n    let userOptions = null;\n\n    switch(userRole) {\n        case roles.SUPERVISOR:\n            userOptions = sideBarItems.userOptions\n            break;\n        case roles.ADMINISTRATOR:\n            userOptions = sideBarItems.userOptions\n            break;\n        case roles.OPERATOR:\n            userOptions = sideBarItems.userOptions.slice(0, 2)\n            break;\n        default:\n            userOptions = null;\n    }\n\n    return userOptions;\n}\n\nfunction returnVisualization(userRole) {\n    let visualizationOptions = null;\n\n    switch(userRole) {\n        case roles.SUPERVISOR:\n            visualizationOptions = sideBarItems.visualizationOptions\n            break;\n        case roles.ADMINISTRATOR:\n            visualizationOptions = sideBarItems.visualizationOptions\n            break;\n        case roles.OPERATOR:\n            visualizationOptions = sideBarItems.visualizationOptions\n            break;\n        default:\n            visualizationOptions = null;\n    }\n\n    return visualizationOptions;\n}\n\nfunction isValidEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if(!re.test(String(email).toLowerCase())) {\n        errors.emailError = \"Invalid Email\";\n    }\n    else {\n        errors.emailError = \"\";\n    }\n\n    return errors.emailError;\n}\n\nfunction isValidPassword(password) {\n    if(isFieldEmpty(password)) {\n        errors.passwordError = \"Invalid Password\";\n    } \n    else {\n        errors.passwordError = \"\";\n    }\n    return errors.passwordError;\n}\n\nfunction isFieldEmpty (fieldText) {\n    var text = fieldText.trim();\n    if(text === '') {\n        return true;\n    }\n    if(text === null) {\n        return true;\n    }\n    if(text === undefined) {\n        return true;\n    }\n    return false;\n}\n\nexport {\n    isValidEmail, \n    isFieldEmpty, \n    isValidPassword, \n    roles,  \n    returnVisualization, \n    returnUserOptions, \n    returnTanksOptions\n};\n\n","import * as React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport IconButton from \"@mui/material/IconButton\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport Button from \"@mui/material/Button\";\nimport Alert from \"@mui/material/Alert\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\n\nimport { isValidEmail, isValidPassword } from \"../utility/Accounts\";\nimport useFetch from \"../hooks/useFetch\";\nimport { apiModes } from \"../api/ApiProperties\";\nimport { UserContext, NavigationContext } from \"../components/Context\";\n\nexport default function LogInPage() {\n  const { user, setUser } = React.useContext(UserContext);\n  const { navigation, setNavigation } = React.useContext(NavigationContext);\n\n  const navigate = useNavigate();\n  document.title = \"Log In\";\n  const [values, setValues, doFetch] = useFetch({\n    password: \"\",\n    emailText: \"\",\n    showPassword: false,\n    emailError: \"\",\n    passwordError: \"\",\n  });\n\n  const [validFields, setValidFields] = React.useState({\n    validEmail: true,\n    validPassword: true,\n  });\n  const [busyProps, setBusyProps] = React.useState({\n    progressVisibility: \"none\",\n    disabledButton: false,\n    responseTextMessage: \"\",\n    responseMsgTextColor: \"#000000\",\n  });\n\n  const handleChange = (event, prop) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      ...values,\n      showPassword: !values.showPassword,\n    });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleLogin = async (event) => {\n    try {\n      event.preventDefault();\n\n      let response = null;\n      let emailError = isValidEmail(values.emailText);\n      let passwordError = isValidPassword(values.password);\n      let responseTextMessage = \"\";\n      let responseMsgTextColor = \"#000000\";\n      let userAuthenticated = false;\n      console.log(\"LOG TO UPLOAD PROJECT IN OTHER BRANCH\");\n      console.log(\"COMMIT FOR DEV DEV\");\n      setValues({\n        ...values,\n        emailError: emailError,\n        passwordError: passwordError,\n      });\n      setBusyProps({\n        progressVisibility: \"block\",\n        disabledButton: true,\n      });\n\n      if (!emailError && !passwordError) {\n        console.log(values.password);\n        const jsonData = await doFetch(\"POST\", apiModes.LOGIN, false, {\n          email: values.emailText,\n          password: values.password,\n        });\n        console.log(jsonData);\n        //check if server responded and if status was successful\n\n        if (jsonData.msg === \"Succesfully authenticated\") {\n          responseMsgTextColor = \"#03945f\";\n          userAuthenticated = true;\n        } else if (jsonData.msg === \"Password incorect\") {\n          responseMsgTextColor = \"#940303\";\n        } else if (jsonData.msg === \"User not found\") {\n          responseMsgTextColor = \"#940303\";\n        } else if (\n          jsonData.msg ===\n          \"Account has not been activated, please check your email for confirming your account.\"\n        ) {\n          responseMsgTextColor = \"#940303\";\n        }\n        responseTextMessage = jsonData.msg;\n\n        setBusyProps({\n          progressVisibility: \"none\",\n          disabledButton: false,\n          responseTextMessage: responseTextMessage,\n          responseMsgTextColor: responseMsgTextColor,\n        });\n        console.log(userAuthenticated);\n        if (userAuthenticated) {\n          localStorage.setItem(\"accessToken\", jsonData.access_token);\n          localStorage.setItem(\"email\", jsonData.user.email);\n          localStorage.setItem(\"refreshToken\", jsonData.refresh_token);\n          localStorage.setItem(\"name\", jsonData.user.name);\n          localStorage.setItem(\"lastName\", jsonData.user.last_name);\n          localStorage.setItem(\"company\", jsonData.user.company);\n          localStorage.setItem(\"role\", jsonData.user.role);\n\n          setUser({\n            ...user,\n            access_token: localStorage.getItem(\"accessToken\"),\n          });\n          setBusyProps({\n            progressVisibility: \"none\",\n            disabledButton: false,\n          });\n          navigate(\"/tanks-monitor\");\n        }\n      } else {\n        setBusyProps({\n          progressVisibility: \"none\",\n          disabledButton: false,\n        });\n      }\n    } catch (error) {\n      if (error.message === \"Failed to fetch\") {\n        setBusyProps({\n          progressVisibility: \"none\",\n          disabledButton: false,\n          responseTextMessage:\n            \"Please check your internet connection and try again\",\n          responseMsgTextColor: \"\",\n        });\n      }\n    }\n  };\n\n\n  const loginGuiStatusManager = (textMessage, values) => {\n    console.log(\"------PRINTING BUSYPROPS----------\");\n    console.log(textMessage);\n    console.log(values);\n    let { emailText } = values;\n    let statusJsx = (\n      <Alert\n        severity={\n          textMessage === \"Succesfully authenticated\"\n            ? \"success\"\n            : \"error\"\n        }\n      >\n        {textMessage}\n      </Alert>\n    );\n  \n    if(textMessage) {\n      switch(textMessage) {\n        case 'Account has not been activated, please check your email for confirming your account.':\n          statusJsx = (\n            <Alert\n              severity={\"error\"}\n            >\n              {textMessage}. If you have not received confirmation email, <a onClick={() => resendConfirmationEmail(emailText)} href=\"#\">please click here to resend confirmation email</a>.\n            </Alert>\n          );\n        break;\n      }\n    }\n    else {\n      statusJsx = null;\n    }\n  \n    return statusJsx;\n  }\n\n  const resendConfirmationEmail = async (toEmail) => {\n    let responseMsgTextColor = \"#940303\";\n    const jsonData = await doFetch(\"POST\", apiModes.RESEND_CONFIRMATION_EMAIL, false, {\n      email: values.emailText\n    });\n    console.log('-----print resent email response------');\n    console.log(jsonData);\n    if (jsonData.msg === \"Confirmation email successfully resent\") {\n      responseMsgTextColor = \"#065fcc\";\n    }\n\n    setBusyProps({\n      ...busyProps,\n      responseTextMessage: jsonData.msg,\n      responseMsgTextColor: responseMsgTextColor\n    });\n\n  };\n\n\n  React.useEffect(() => {\n    setNavigation({\n      ...navigation,\n      currentPage: \"Log In\",\n    });\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"90px\", paddingTop: \"50px\" }}>\n      <Box\n        sx={{\n          borderRadius: \"20px\",\n          width: \"70%\",\n          height: \"auto\",\n          paddingTop: \"20px\",\n          paddingBottom: \"20px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          backgroundColor: \"\",\n        }}\n      >\n        <h1 style={{ fontSize: \"50px\" }}>Log In</h1>\n        <div style={{ marginBottom: \"10px\" }}>\n          <TextField\n            style={{\n              width: \"60%\",\n            }}\n            id=\"outlined-basic\"\n            label=\"Email\"\n            variant=\"outlined\"\n            type=\"text\"\n            value={values.emailText}\n            onChange={(e) => handleChange(e, \"emailText\")}\n            onKeyUp={(e) => {\n              if (e.code === \"Enter\") {\n                handleLogin(e);\n              }\n            }}\n          />\n        </div>\n        <div style={{ width: \"60%\", margin: \"auto\", marginBottom: \"10px\" }}>\n          {values.emailError ? (\n            <Alert severity=\"error\">Please type valid email address</Alert>\n          ) : null}\n        </div>\n        <div>\n          <FormControl sx={{ m: 1, width: \"60%\" }} variant=\"outlined\">\n            <InputLabel htmlFor=\"outlined-adornment-password\">\n              Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={values.showPassword ? \"text\" : \"password\"}\n              value={values.password}\n              onChange={(e) => handleChange(e, \"password\")}\n              onKeyUp={(e) => {\n                if (e.code === \"Enter\") {\n                  handleLogin(e);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={(e) => handleMouseDownPassword(e)}\n                    edge=\"end\"\n                  >\n                    {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Password\"\n            />\n          </FormControl>\n        </div>\n        <div style={{ width: \"60%\", margin: \"auto\", marginBottom: \"5px\" }}>\n          {values.passwordError ? (\n            <Alert severity=\"error\">Please type your password correctly</Alert>\n          ) : null}\n        </div>\n        <div style={{ display: busyProps.progressVisibility }}>\n          <CircularProgress />\n        </div>\n        <div\n          style={{\n            color: busyProps.responseMsgTextColor,\n            display: busyProps.responseTextMessage ? \"block\" : \"none\",\n            width: \"60%\",\n            margin: \"auto\",\n            marginBottom: \"5px\",\n          }}\n        >\n          {loginGuiStatusManager(busyProps.responseTextMessage, values)}\n\n        </div>\n        <div style={{ marginBottom: \"15px\" }}>\n          <Button\n            disabled={busyProps.disabledButton}\n            sx={{\n              width: \"40%\",\n              borderRadius: \"20px\",\n              backgroundColor: \"#54008c\",\n            }}\n            onClick={(e) => handleLogin(e)}\n            variant=\"contained\"\n          >\n            Log In\n          </Button>\n        </div>\n        <a href=\"#\">Forgot password?</a>\n      </Box>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Alert from \"@mui/material/Alert\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport useFetch from \"../hooks/useFetch\";\nimport { apiModes } from \"../api/ApiProperties\";\n\nexport default function UserUpdate() {\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\tconst [pageState, setPageState] = useState({\n\t\tisBusy: false,\n\t\talertSeverity: \"\",\n\t\tmsg: \"\"\n\n\t});\n\tconst [user, setUser, doFetch] = useFetch({\n\t\tid: null,\n\t\tname: \"\",\n\t\tlastName: \"\",\n\t\temail: \"\",\n\t\trole: \"Operator\",\n\t});\n\tconst handleChange = (e, prop) => {\n\t\tsetUser({\n\t\t\t...user,\n\t\t\t[prop]: e.target.value,\n\t\t});\n\t};\n\tconst errorHandler = (error) => {\n\t\tlet messageInterpreted = \"\";\n\t\tlet severityType = \"error\";\n\t\tif (error.message === 'Failed to fetch') {\n\t\t\tmessageInterpreted = \"Please check your internet connection and try again.\"\n\t\t}\n\t\tsetPageState({\n\t\t\tisBusy: false,\n\t\t\tmsg: messageInterpreted,\n\t\t\talertSeverity: severityType\n\t\t});\n\t}\n\tconst handleUpdateUser = async (e) => {\n\t\ttry { //(httpMethod, apiMode, authorization, payload)\n\t\t\tconsole.log(user);\n\t\t\tconst jsonData = await doFetch(\"PUT\", apiModes.UPDATEUSER, true, {\n\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\tuser\n\t\t\t});\n\t\t\tconsole.log(jsonData);\n\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\tnavigate(\"/log-in\");\n\t\t\t}\n\t\t\tif (jsonData.msg === \"Succesfully updated\") {\n\t\t\t\tsetPageState({\n\t\t\t\t\tisBusy: false,\n\t\t\t\t\tmsg: jsonData.msg,\n\t\t\t\t\talertSeverity: \"success\"\n\t\t\t\t});\n\t\t\t\tsetUser({\n\t\t\t\t\tid: jsonData.user.id,\n\t\t\t\t\tname: jsonData.user.name,\n\t\t\t\t\tlastName: jsonData.user.lastName,\n\t\t\t\t\temail: jsonData.user.email,\n\t\t\t\t\trole: jsonData.user.role,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tcatch (error) {\n\t\t\terrorHandler(error);\n\t\t}\n\t};\n\tconst fetchUser = async () => {\n\t\ttry { //(httpMethod, apiMode, authorization, payload)\n\t\t\tsetPageState({\n\t\t\t\tisBusy: true,\n\t\t\t\tmsg: \"\"\n\t\t\t});\n\t\t\tconst jsonData = await doFetch(\"GET\", apiModes.FETCHUSER, true, {\n\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\temail: location.state.email\n\t\t\t});\n\t\t\tconsole.log(jsonData);\n\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\tnavigate(\"/log-in\");\n\t\t\t}\n\t\t\tif (jsonData.msg === \"Succesfully fetched\") {\n\t\t\t\tsetPageState({\n\t\t\t\t\tisBusy: false,\n\t\t\t\t\tmsg: jsonData.msg,\n\t\t\t\t\talertSeverity: \"success\"\n\t\t\t\t});\n\t\t\t\tsetUser({\n\t\t\t\t\tid: jsonData.user.id,\n\t\t\t\t\tname: jsonData.user.name,\n\t\t\t\t\tlastName: jsonData.user.lastName,\n\t\t\t\t\temail: jsonData.user.email,\n\t\t\t\t\trole: jsonData.user.role,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\terrorHandler(error);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tfetchUser();\n\t}, []);\n\treturn (\n\t\t<Box\n\t\t\tstyle={{\n\t\t\t\theight: 400,\n\t\t\t\twidth: \"80%\",\n\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\tmarginRight: \"auto\",\n\t\t\t\tmarginTop: \"100px\",\n\t\t\t\tpadding: \"15px\",\n\t\t\t\tborderRadius: \"10px\",\n\t\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0)\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\ttextAlign: \"center\"\n\t\t\t}}>\n\t\t\t<h1>Input new data</h1>\n\t\t\t<div>\n\t\t\t\t<TextField\n\t\t\t\t\tstyle={{ width: \"50%\", marginBottom: \"15px\" }}\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel={\"Name\" || \"\"}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={user.name}\n\t\t\t\t\tonChange={(e) => handleChange(e, \"name\")}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TextField\n\t\t\t\t\tstyle={{ width: \"50%\", marginBottom: \"15px\" }}\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel={\"Last Name\" || \"\"}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={user.lastName}\n\t\t\t\t\tonChange={(e) => handleChange(e, \"lastName\")}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<TextField\n\t\t\t\t\tstyle={{ width: \"50%\", marginBottom: \"10px\" }}\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel='Email'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={user.email}\n\t\t\t\t\tonChange={(e) => handleChange(e, \"email\")}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<FormControl\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmarginBottom: \"10px\",\n\t\t\t\t\t\twidth: \"50%\"\n\t\t\t\t\t}}>\n\t\t\t\t\t<InputLabel id='demo-simple-select-label'>Role</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId='demo-simple-select-label'\n\t\t\t\t\t\tid='demo-simple-select'\n\t\t\t\t\t\tvalue={user.role}\n\t\t\t\t\t\tlabel='Role'\n\t\t\t\t\t\tonChange={(e) => handleChange(e, \"role\")}>\n\t\t\t\t\t\t<MenuItem value={\"Supervisor\"}>Supervisor</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"Administrator\"}>Administrator</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"Operator\"}>Operator</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</div>\n\t\t\t<div style={{ display: pageState.isBusy ? \"block\" : \"none\" }}>\n\t\t\t\t<CircularProgress />\n\t\t\t</div>\n\t\t\t{pageState.msg ? (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"50%\",\n\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\t\tmarginTop: \"10px\",\n\t\t\t\t\t}}>\n\t\t\t\t\t<Alert severity={pageState.alertSeverity}>{pageState.msg}</Alert>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<div style={{ marginTop: \"10px\" }}>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\twidth: \"50%\",\n\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={(e) => handleUpdateUser(e)}>\n\t\t\t\t\tUpdate\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</Box>\n\t);\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\nexport default function ConfirmationModal(props) {\n    const { \n\t\topen, \n\t\ttankSelected, \n\t\thandleClose, \n\t\thandleDelete, \n\t\tdeleteIsBusy,\n\t\tdeleteModalMsg \n\t} = props;\n\tconst theme = useTheme();\n\tconst fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog\n\t\t\t\tfullScreen={fullScreen}\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby='responsive-dialog-title'>\n\t\t\t\t<DialogTitle id='responsive-dialog-title'>\n\t\t\t\t\t{`Tank ${tankSelected} will be deleted`}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText>\n                    Are you sure?. This action cannot be undone.\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t{deleteModalMsg ? (\n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\t\tmarginRight: \"auto\"\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{deleteModalMsg}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<div style={{display: (deleteIsBusy ? \"block\" : \"none\"), marginLeft: \"auto\", marginRight: \"auto\"}}>\n\t\t\t\t\t<CircularProgress />\n\t\t\t\t</div>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button autoFocus onClick={() => handleClose()}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => handleDelete()} autoFocus>\n\t\t\t\t\t\tYes\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { useNavigate } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport EqualizerIcon from \"@mui/icons-material/Equalizer\";\nimport TimelineIcon from \"@mui/icons-material/Timeline\";\n\nimport ConfirmationModal from \"../components/tanks/ConfirmationModal\";\nimport useFetch from \"../hooks/useFetch\";\nimport {\n\tUserContext,\n\tNavigationContext,\n\tTankContext,\n} from \"../components/Context\";\nimport { apiModes } from \"../api/ApiProperties\";\n\nconst rowsDummy = [\n\t{ id: 1, lastName: \"Snow\", firstName: \"Jon\", age: 35 },\n\t{ id: 2, lastName: \"Lannister\", firstName: \"Cersei\", age: 42 },\n\t{ id: 3, lastName: \"Lannister\", firstName: \"Jaime\", age: 45 },\n\t{ id: 4, lastName: \"Stark\", firstName: \"Arya\", age: 16 },\n\t{ id: 5, lastName: \"Targaryen\", firstName: \"Daenerys\", age: null },\n\t{ id: 6, lastName: \"Melisandre\", firstName: null, age: 150 },\n\t{ id: 7, lastName: \"Clifford\", firstName: \"Ferrara\", age: 44 },\n\t{ id: 8, lastName: \"Frances\", firstName: \"Rossini\", age: 36 },\n\t{ id: 9, lastName: \"Roxie\", firstName: \"Harvey\", age: 65 },\n];\n\nexport default function Tanks() {\n\tconst navigate = useNavigate();\n\tconst {navigation, setNavigation} = React.useContext(NavigationContext);\n\tconst { user, setUser } = React.useContext(UserContext);\n\tconst { tankContextData, setTankContextData } = React.useContext(TankContext);\n\tconst [rows, setRows, doFetch] = useFetch(rowsDummy);\n\tconst [open, setOpen] = React.useState(false);\n\tconst [componentState, setComponentState] = useState({\n\t\tisBusy: false,\n\t\ttankSelected: \"\",\n\t\tdeleteIsBusy: false,\n\t\tdeleteModalMsg: \"\",\n\t});\n\tconst handleDelete = async () => {\n\t\ttry {\n\t\t\tsetComponentState({\n\t\t\t\t...componentState,\n\t\t\t\tdeleteIsBusy: true,\n\t\t\t\tdeleteModalMsg: \"\",\n\t\t\t});\n\t\t\tconst jsonData = await doFetch(\"DELETE\", apiModes.DELETETANK, true, {\n\t\t\t\ttankId: componentState.tankSelected,\n\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t});\n\t\t\tconsole.log(jsonData.msg);\n\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\tnavigate(\"log-in\");\n\t\t\t} else if (jsonData.msg === \"Operation Succeded\") {\n\t\t\t\tfetchTanks();\n\t\t\t\tsetComponentState({\n\t\t\t\t\t...componentState,\n\t\t\t\t\tdeleteIsBusy: false,\n\t\t\t\t\tdeleteModalMsg: jsonData.msg,\n\t\t\t\t});\n\t\t\t\tsetOpen(false);\n\t\t\t} else {\n\t\t\t\tsetComponentState({\n\t\t\t\t\t...componentState,\n\t\t\t\t\tdeleteIsBusy: false,\n\t\t\t\t\tdeleteModalMsg: jsonData.msg,\n\t\t\t\t});\n\t\t\t\tsetOpen(true);\n\t\t\t}\n\t\t} catch (error) {}\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\tconst columns = [\n\t\t{ field: \"id\", headerName: \"ID\", width: 70 },\n\t\t{ field: \"tankId\", headerName: \"Tank ID\", width: 130 },\n\t\t{ field: \"lastName\", headerName: \"Last name\", width: 130, hide: true },\n\t\t{\n\t\t\tfield: \"fullName\",\n\t\t\theaderName: \"Full name\",\n\t\t\tdescription: \"This column has a value getter and is not sortable.\",\n\t\t\tsortable: false,\n\t\t\twidth: 160,\n\t\t\thide: true,\n\t\t\tvalueGetter: (params) =>\n\t\t\t\t`${params.getValue(params.id, \"firstName\") || \"\"} ${\n\t\t\t\t\tparams.getValue(params.id, \"lastName\") || \"\"\n\t\t\t\t}`,\n\t\t},\n\t\t{\n\t\t\tfield: \"action\",\n\t\t\theaderName: \"Options\",\n\t\t\tdescription: \"This column is for action buttons like edit or delete\",\n\t\t\tsortable: false,\n\t\t\twidth: 160,\n\t\t\trenderCell: (params) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div style={{ margin: \"auto\" }}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tconsole.log(\"Passed parameter: \" + String(params.row.tankId));\n\t\t\t\t\t\t\t\t//setTankContextData({\n\t\t\t\t\t\t\t\t//    tankSelected: params.row.tankId\n\t\t\t\t\t\t\t\t//});\n\t\t\t\t\t\t\t\tnavigate(\"/details-tank\", {\n\t\t\t\t\t\t\t\t\tstate: { tankId: params.row.tankId },\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Tooltip title='Details' placement='left-start'>\n\t\t\t\t\t\t\t\t<VisibilityIcon />\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t{localStorage.getItem(\"role\") === \"Administrator\" ||\n\t\t\t\t\t\tlocalStorage.getItem(\"role\") === \"Supervisor\" ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\t\t\"Passed parameter: \" + String(params.row.tankId)\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tsetTankContextData({\n\t\t\t\t\t\t\t\t\t\t\ttankSelected: params.row.tankId,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tnavigate(\"/modify-tank\", {\n\t\t\t\t\t\t\t\t\t\t\treplace: false,\n\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\ttankId: params.row.tankId,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Tooltip title='Edit' placement='top'>\n\t\t\t\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetComponentState({\n\t\t\t\t\t\t\t\t\t\t\t...componentState,\n\t\t\t\t\t\t\t\t\t\t\ttankSelected: params.row.tankId,\n\t\t\t\t\t\t\t\t\t\t\tdeleteModalMsg: \"\",\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Tooltip title='Delete' placement='right-end'>\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t];\n\tasync function fetchTanks() {\n\t\ttry {\n\t\t\tconst jsonData = await doFetch(\"GET\", apiModes.FETCHTANKS, true, {\n\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t});\n\n\t\t\tif (jsonData.msg === \"Success fetching\") {\n\t\t\t\tif (!jsonData.tanks.length) {\n\t\t\t\t\tconsole.log(\"no data \");\n\t\t\t\t}\n\t\t\t\tsetRows(jsonData.tanks);\n\t\t\t} else if (jsonData.msg === \"Token has expired\") {\n\t\t\t\tsetUser({\n\t\t\t\t\tname: \"\",\n\t\t\t\t\tlastName: \"\",\n\t\t\t\t\temail: \"\",\n\t\t\t\t\tcompany: \"\",\n\t\t\t\t\taccess_token: \"\",\n\t\t\t\t});\n\t\t\t\tnavigate(\"/log-in\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error.message);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsetNavigation({\n            ...navigation,\n            currentPage: \"Tanks List\"\n        });\n\t\tfetchTanks();\n\t}, []);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\theight: 400,\n\t\t\t\twidth: \"60%\",\n\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\tmarginRight: \"auto\",\n\t\t\t\tmarginTop: \"100px\",\n\t\t\t\tpadding: \"15px\",\n\t\t\t\tborderRadius: \"10px\",\n\t\t\t\tbackgroundColor: \"rgba(255, 255, 255, 0.9)\",\n\t\t\t}}>\n\t\t\t<h1 style={{ textAlign: \"center\" }}>{user.company} Tanks</h1>\n\t\t\t<div \n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: \"flex\", \n\t\t\t\t\tflexDirection: \"row\", \n\t\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\t\tmarginBottom: \"15px\"\n\t\t\t\t}}>\n\t\t\t\t<Button\n\t\t\t\t\tsx={{ borderRadius: \"10px\" }}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t\tonClick={() => navigate(\"/add-tank\")}>\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsx={{ borderRadius: \"10px\", backgroundColor: \"#9e6a03\"}}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tstartIcon={<EqualizerIcon />}\n\t\t\t\t\tonClick={() => navigate(\"/tanks-monitor\")}>\n\t\t\t\t\tVisualization\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tsx={{ borderRadius: \"10px\", backgroundColor: \"#085c02\" }}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tstartIcon={<TimelineIcon />}\n\t\t\t\t\tonClick={() => navigate(\"/historic\")}>\n\t\t\t\t\tHistoric\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<DataGrid\n\t\t\t\trows={rows.map((item, index) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: index + 1,\n\t\t\t\t\t\ttankId: item,\n\t\t\t\t\t};\n\t\t\t\t})}\n\t\t\t\tcolumns={columns}\n\t\t\t\tpageSize={5}\n\t\t\t\trowsPerPageOptions={[5]}\n\t\t\t\tsx={{}}\n\t\t\t/>\n\t\t\t<ConfirmationModal\n\t\t\t\topen={open}\n\t\t\t\ttankSelected={componentState.tankSelected}\n\t\t\t\thandleClose={handleClose}\n\t\t\t\thandleDelete={handleDelete}\n\t\t\t\tdeleteIsBusy={componentState.deleteIsBusy}\n\t\t\t\tdeleteModalMsg={componentState.deleteModalMsg}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","function validateTankRegister(tank) {\n    let errorMessage = null;\n\n    if(!tank.tankId.replace(\" \", \"\") \n       || !tank.WtrLvlMin \n       || !tank.WtrLvlMax \n       || !tank.OxygenPercentageMin\n       || !tank.OxygenPercentageMax\n       || !tank.PhMin\n       || !tank.PhMax) {\n        errorMessage = \"Error: All fields must be filled\";\n    }\n    else if(parseFloat(tank.WtrLvlMin) > parseFloat(tank.WtrLvlMax)) {\n        errorMessage = \"Error: Water Level Min Value cannot be greater than Max Value\";\n    } //if minimum value is grater than max value\n    else if(parseFloat(tank.OxygenPercentageMin) > parseFloat(tank.OxygenPercentageMax)) {\n        errorMessage = \"Error: Oxygen Percentage Min Value cannot be greater than Max Value\";\n    }\n    else if(parseFloat(tank.PhMin) > parseFloat(tank.PhMax)) {\n        errorMessage = \"Error: PH Min Value cannot be greater than Max Value\";\n    }\n\n    return errorMessage;\n}\n/*\n tankId: \"\",\n        WtrLvlMin: null,\n        WtrLvlMax: null,\n        OxygenPercentageMin: null,\n        OxygenPercentageMax: null,\n        PhMin: null,\n        PhMax: null\n*/\n\nexport {\n    validateTankRegister\n};","import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Divider from \"@mui/material/Divider\";\nimport Button from \"@mui/material/Button\";\nimport Alert from '@mui/material/Alert';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { UserContext } from \"../components/Context\";\nimport { GET } from \"../api/Get\";\nimport { POST } from \"../api/Post\";\nimport useFetch from \"../hooks/useFetch\";\nimport { apiModes } from \"../api/ApiProperties\";\nimport { validateTankRegister } from \"../utility/TanksUtility\";\n\nexport default function AddTank() {\n\tconst navigate = useNavigate();\n\tconst { user, setUser } = React.useContext(UserContext);\n\tconst [tank, setTank, doFetch] = useFetch({\n\t\ttankId: \"\",\n\t\tWtrLvlMin: \"\",\n\t\tWtrLvlMax: \"\",\n\t\tOxygenPercentageMin: \"\",\n\t\tOxygenPercentageMax: \"\",\n\t\tPhMin: \"\",\n\t\tPhMax: \"\"\n\t});\n\tconst [pageState, setPageState] = useState({\n\t\tfieldsValidationErrorString: \"\",\n        alertSeverity: \"\",\n\t\tisBusy: false,\n\t\tdisplayAlert: false\n\t});\n\tconst updateTank = (event, prop) => {\n\t\tsetTank({\n\t\t\t...tank,\n\t\t\t[prop]: event.target.value,\n\t\t});\n\t};\n\n\tconst handleAddTank = async(e) => {\n\t\ttry {\n\t\t\te.preventDefault();\n\t\t\tconsole.log(tank);\n\t\t\tsetPageState({\n\t\t\t\t...pageState,\n\t\t\t\tisBusy: true,\n\t\t\t\tdisplayAlert: false,\n\t\t\t});\n\t\t\tvar tankValidationMessage = validateTankRegister(tank);\n\t\t\tconsole.log(tankValidationMessage);\n\t\t\tif (tankValidationMessage) {\n\t\t\t\tsetPageState({\n\t\t\t\t\t...pageState,\n\t\t\t\t\tfieldsValidationErrorString: tankValidationMessage,\n\t\t\t\t\tdisplayAlert: true,\n\t\t\t\t\talertSeverity: \"error\"\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet locSeverity = '';\n\t\t\t\tconst jsonData = await doFetch(\"POST\", apiModes.ADDTANK, true, {\n\t\t\t\t\ttankId: tank.tankId,\n\t\t\t\t\tWtrLvlMin: tank.WtrLvlMin,\n\t\t\t\t\tWtrLvlMax: tank.WtrLvlMax,\n\t\t\t\t\tOxygenPercentageMin: tank.OxygenPercentageMin,\n\t\t\t\t\tOxygenPercentageMax: tank.OxygenPercentageMax,\n\t\t\t\t\tPhMin: tank.PhMin,\n\t\t\t\t\tPhMax: tank.PhMax,\n\t\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\t\tcompany: localStorage.getItem(\"company\")});\n\t\t\t\tif(jsonData.msg === 'Token has expired') {\n\t\t\t\t\tnavigate('/log-in');\n\t\t\t\t}\n\t\t\t\telse if(jsonData.msg === 'Tank already added, please modify or delete.') {\n\t\t\t\t\tlocSeverity = 'success';\n\t\t\t\t}\n\t\t\t\telse if(jsonData.msg === 'Success adding') {\n\t\t\t\t\tlocSeverity = 'success';\n\t\t\t\t}\n\n\t\t\t\tif(jsonData.msg !== 'Token has expired') {\n\t\t\t\t\tsetPageState({\n\t\t\t\t\t\t...pageState,\n\t\t\t\t\t\tfieldsValidationErrorString: jsonData.msg,\n\t\t\t\t\t\talertSeverity: locSeverity,\n\t\t\t\t\t\tdisplayAlert: true,\n\t\t\t\t\t\tisBusy: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(error) {\n\t\t\tlet errorMessage = \"\";\n\t\t\tif(error.message === 'Failed to fetch') {\n\t\t\t\terrorMessage = \"Please check your internet connection and try again.\";\n\t\t\t}\n\n\t\t\tsetPageState({\n\t\t\t\t...pageState,\n\t\t\t\tfieldsValidationErrorString: errorMessage,\n\t\t\t\talertSeverity: \"error\",\n\t\t\t\tisBusy: false\n\t\t\t});\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tasync function authenticateUser() {\n\t\t\ttry {\n\t\t\t\tconsole.log(\"company name is: \" + localStorage.getItem(\"company\"))\n\t\t\t\tconst jsonData = await doFetch(\"GET\", apiModes.GETUSER, true, {\n\t\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\t});\n\n\t\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\t\tsetUser({\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\temail: \"\",\n\t\t\t\t\t\tcompany: \"\",\n\t\t\t\t\t\taccess_token: \"\",\n\t\t\t\t\t});\n\t\t\t\t\tnavigate(\"/log-in\");\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tlet errorMessage = \"\";\n\t\t\t\tif(error.message === 'Failed to fetch') {\n\t\t\t\t\terrorMessage = \"Something went wrong with connection, please check your internet\";\n\t\t\t\t}\n\t\t\t\tsetPageState({\n\t\t\t\t\t...pageState,\n\t\t\t\t\tfieldsValidationErrorString: errorMessage,\n\t\t\t\t\tdisplayAlert: true,\n\t\t\t\t\talertSeverity: \"error\"\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tauthenticateUser();\n\t}, []);\n\treturn (\n\t\t<Box\n\t\t\tcomponent='form'\n\t\t\tnoValidate\n\t\t\tsx={{\n\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\tmarginRight: \"auto\",\n\t\t\t\tmarginTop: \"100px\",\n\t\t\t\tpadding: \"10px\",\n\t\t\t\twidth: \"50%\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\tbackgroundColor: \"rgba(255,255,255, 0.8)\",\n\t\t\t\tborderRadius: \"15px\",\n\t\t\t\ttextAlign: \"center\",\n\t\t\t}}\n\t\t\tautoComplete='off'>\n\t\t\t<h1>Type parameters</h1>\n\t\t\t<div style={{ marginTop: \"5px\", marginBottom: \"10px\" }}>\n\t\t\t\t<TextField\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel='Tank Id'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={tank.tankId}\n\t\t\t\t\tonChange={(e) => updateTank(e, \"tankId\")}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Divider>Water Level Values</Divider>\n\t\t\t<div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n\t\t\t\t<TextField\n\t\t\t\t\tsx={{ }}\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel='Min'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={tank.WtrLvlMin}\n\t\t\t\t\tonChange={(e) => updateTank(e, \"WtrLvlMin\")}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel='Max'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={tank.WtrLvlMax}\n\t\t\t\t\tonChange={(e) => updateTank(e, \"WtrLvlMax\")}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Divider>%Oxygen Values</Divider>\n\t\t\t<div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n\t\t\t\t<TextField\n\t\t\t\t\tsx={{  }}\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel='Min'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={tank.OxygenPercentageMin}\n\t\t\t\t\tonChange={(e) => updateTank(e, \"OxygenPercentageMin\")}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel='Max'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={tank.OxygenPercentageMax}\n\t\t\t\t\tonChange={(e) => updateTank(e, \"OxygenPercentageMax\")}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Divider>PH Values</Divider>\n\t\t\t<div style={{ marginTop: \"10px\" }}>\n\t\t\t\t<TextField\n\t\t\t\t\tsx={{  }}\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel='Min'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={tank.PhMin}\n\t\t\t\t\tonChange={(e) => updateTank(e, \"PhMin\")}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\tlabel='Max'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tvalue={tank.PhMax}\n\t\t\t\t\tonChange={(e) => updateTank(e, \"PhMax\")}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div style={{display: pageState.isBusy ? \"block\" : \"none\"}}>\n\t\t\t\t<CircularProgress />\n\t\t\t</div>\n\t\t\t{pageState.displayAlert ? (\n\t\t\t\t<div \n                    style={{\n                        width: \"70%\", \n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        marginTop: \"10px\"\n                    }}>\n\t\t\t\t\t<Alert severity={pageState.alertSeverity}>{pageState.fieldsValidationErrorString}</Alert>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t<div style={{ marginTop: \"10px\" }}>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tsx={{\n\t\t\t\t\t\twidth: \"50%\",\n\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={(e) => handleAddTank(e)}>\n\t\t\t\t\tAdd\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</Box>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nexport default function HistoricalChart(props) {\n  const { data, tankSelected, datesRange } = props;\n  /*console.log(\"--------DATA FOR HISTORICAL---------\");\n  console.log(data);*/\n  const [dataForGraph, setDataForGraph] = useState({\n    WtrLvlValues: [],\n    OxygenPercentageValues: [],\n    PhValues: [],\n    timestamp: [],\n  });\n\n  useEffect(() => {\n    if (data && tankSelected) {\n      let tankHistoricDataFiltered = data.filter(\n        (element) => element.tank_name === tankSelected\n      );\n      if (tankHistoricDataFiltered.length > 0) {\n        let startDateUnix = new Date(datesRange.startDate).getTime() / 1000;\n        let endDateUnix = new Date(datesRange.endDate).getTime() / 1000;\n        let tankHistoricDataSelected = tankHistoricDataFiltered[0];\n        let WtrLvlValues = [];\n        let OxygenPercentageValues = [];\n        let PhValues = [];\n        let timestamp = [];\n        console.log(\"---------ALL DATA FROM TANK----------------\");\n        console.log(tankHistoricDataSelected);\n        tankHistoricDataSelected.timestamp.forEach((timestampValue, index) => {\n          if (timestampValue >= startDateUnix && timestampValue <= endDateUnix) {\n            //indexes.push(index);\n            WtrLvlValues.push(tankHistoricDataSelected.WtrLvlValues[index]);\n            OxygenPercentageValues.push(tankHistoricDataSelected.OxygenPercentageValues[index]);\n            PhValues.push(tankHistoricDataSelected.PhValues[index]);\n            timestamp.push(tankHistoricDataSelected.timestamp[index]);\n          }\n        });\n\n        setDataForGraph({\n          WtrLvlValues: WtrLvlValues,\n          OxygenPercentageValues: OxygenPercentageValues,\n          PhValues: PhValues,\n          timestamp: timestamp.map(\n            (timestampValue) => {\n              const date = new Date(timestampValue * 1000);\n              let stringDate =\n                \"\" +\n                date.getFullYear() +\n                \"-\" +\n                (date.getMonth() + 1) +\n                \"-\" +\n                date.getDate();\n              return stringDate;\n            }\n          ),\n        });\n      }\n    }\n  }, [tankSelected, data, datesRange]);\n\n  return (\n    <div>\n      <Line\n        data={{\n          labels: dataForGraph.timestamp,\n          datasets: [\n            {\n              label: \"Water Level\",\n              data: dataForGraph.WtrLvlValues,\n              fill: false,\n              borderColor: \"rgb(33, 122, 237)\",\n              tension: 0.1,\n            },\n            {\n              label: \"Oxygen Percentage\",\n              data: dataForGraph.OxygenPercentageValues,\n              fill: false,\n              borderColor: \"rgb(75, 192, 192)\",\n              tension: 0.1,\n            },\n            {\n              label: \"Ph Values\",\n              data: dataForGraph.PhValues,\n              fill: false,\n              borderColor: \"rgb(69, 30, 0)\",\n              tension: 0.1,\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport DateAdapter from \"@mui/lab/AdapterDateFns\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport socketIOClient from \"socket.io-client\";\n\nimport HistoricalChart from \"../components/historical/HistoricalChart\";\nimport { Line } from \"react-chartjs-2\";\nimport { UserContext, NavigationContext } from \"../components/Context\";\nimport { socketApiRoute } from \"../api/ApiProperties\";\nimport { apiModes } from \"../api/ApiProperties\";\nimport useFetch from \"../hooks/useFetch\";\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\nconst tankSelectedDummy = \"MT002\";\n\nexport default function Historic() {\n  const { user, setUser } = useContext(UserContext);\n  const {navigation, setNavigation} = React.useContext(NavigationContext);\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState(null);\n  const [datesRange, setDatesRange] = useState({\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const [tanks, setTanks] = useState([]); //data for the select control which comes from backend to display all tanks available\n  const [tank, setTank] = useState(null); //tankSelected\n  const [data, setData, doFetch] = useFetch([]);\n  const [componentState, setComponentState] = useState({\n    notificationMessage: \"\",\n    notificationType: \"\",\n  });\n  const [open, setOpen] = useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n  const stablishSocketConnection = async (jsonData) => {\n    let socket = socketIOClient(socketApiRoute);\n    setSocket(socket);\n    socket.on(\"connect\", () => {\n      console.log(\"Successfully connected to socket!\");\n      socket.emit(\"join_user_sessionid\", {\n        email: localStorage.getItem(\"email\"),\n        company: localStorage.getItem(\"company\"),\n      });\n      setOpen(true);\n      setComponentState({\n        notificationMessage: \"Successfully connected\",\n        notificationType: \"success\",\n      });\n    });\n    socket.on(\"success_joinning\", (msj) => {\n      console.log(\"message from server conection: \" + msj.message);\n    });\n    socket.on(\"get_historic_data\", (historicData) => {\n      //setSocketData(historicData);\n      updateHistoricData(historicData);\n    });\n    socket.on(\"connect_error\", (err) =>\n      console.log(\"connect_error: \" + err.message)\n    );\n    socket.on(\"connect_failed\", (err) =>\n      console.log(\"connect_failed: \" + err.message)\n    );\n    socket.on(\"disconnect\", (err) => {\n      setOpen(true);\n      setComponentState({\n        notificationMessage: \"Connection lost :(\",\n        notificationType: \"error\",\n      });\n    });\n    return socket;\n  };\n  const selectedTankHandle = (e) => {\n\t  setTank(e.target.value);\n  }\n  const handleDateRangeChange = (e, prop) => {\n    let value = e.target.value;\n    let property = prop;\n\n    setDatesRange(oldDatesRanges => {\n      let newDatesRanges = {};\n      let errorMessage = \"\"\n      if(property === 'startDate' && value > oldDatesRanges.endDate) {\n        errorMessage = 'Start Date cannot be greater than End Date.';\n        newDatesRanges = {\n          ...oldDatesRanges,\n          [property]: oldDatesRanges.startDate\n        };\n      }\n      else if(property === 'endDate' && value < oldDatesRanges.startDate) {\n        errorMessage = 'End Date cannot be smaller than Start Date.';\n        newDatesRanges = {\n          ...oldDatesRanges,\n          [property]: oldDatesRanges.endDate\n        };\n      }\n      else {\n        newDatesRanges = {\n          ...oldDatesRanges,\n          [property]: value\n        };\n      }\n      if(errorMessage) {\n        alert(errorMessage);\n      }\n      return newDatesRanges\n      \n    })\n  }\n\n  const updateHistoricData = async (paramData) => {\n    console.log(\"------HISTORIC DATA FROM SERVER-------\");\n    console.log(paramData);\n    /*\n\t\t\tOxygenPercentage: (3) [66, 27, 58]\n\t\t\tPh: (3) [8, 1, 5]\n\t\t\tWtrLvl: (3) [103, 86, 133]\n\t\t\tid: (3) ['MT001', 'MT002', 'MT003']\n\t\t\ttimestamp: (3) [1644342022, 1644342022, 1644342022]\n\t\t\t[[Prototype]]: Object\n\t\t*/\n    setData(oldData => {\n      let newData = [];\n      oldData.forEach(element => {\n        let tankNameStringIndex = paramData.id.indexOf(element.tank_name); //gets the string name tank index from new data from server\n        let tankDataObject = {\n          tank_name: element.tank_name,\n          WtrLvlValues: [...element.WtrLvlValues, paramData.WtrLvl[tankNameStringIndex]],\n          OxygenPercentageValues: [...element.OxygenPercentageValues, paramData.OxygenPercentage[tankNameStringIndex]],\n          PhValues: [...element.PhValues, paramData.Ph[tankNameStringIndex]],\n          timestamp: [...element.timestamp, paramData.timestamp[tankNameStringIndex]]\n        };\n        newData.push(tankDataObject);\n      });\n\n      return newData;\n    });\n    \n  };\n\n  async function processRequestedHistoric(paramData) {\n    let tankNames = paramData.map(element => {\n      return element.tank_name;\n    });\n    setTank(tankNames[0])\n    setTanks(tankNames);\n    setData(paramData);\n  }\n\n  useEffect(() => {\n    setNavigation({\n      ...navigation,\n      currentPage: \"Historic Visualization\"\n    });\n    var socket = null;\n    const stablishConnection = async () => {\n      try {\n        const jsonData = await doFetch(\"GET\", apiModes.FETCHHISTORIC, true, {\n          accessToken: localStorage.getItem(\"accessToken\"),\n          company: localStorage.getItem(\"company\"),\n        });\n        if (jsonData.msg === \"Token has expired\") {\n          setUser({\n            name: \"\",\n            lastName: \"\",\n            email: \"\",\n            company: \"\",\n            access_token: \"\",\n          });\n          navigate(\"/log-in\");\n        } else if (jsonData.msg === \"Successfully fetched\") {\n          socket = await stablishSocketConnection(jsonData);\n          processRequestedHistoric(jsonData.data);\n        }\n      } catch (error) {}\n    };\n    if (!socket) {\n      stablishConnection();\n    }\n    return () => {\n      console.log(socket);\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, []);\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      sx={{\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"100px\",\n        padding: \"10px\",\n        width: \"50%\",\n        justifyContent: \"center\",\n        backgroundColor: \"rgba(255,255,255, 0.8)\",\n        borderRadius: \"15px\",\n        textAlign: \"center\",\n      }}\n      autoComplete=\"off\"\n    >\n      <h1 style={{ color: \"black\", fontWeight: 600 }}>Historic Data</h1>\n      {tank ? (\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">Select Tank</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={tank}\n            label=\"Select Tank\"\n            onChange={selectedTankHandle}\n          >\n            {tanks.map((tankString) => {\n              return <MenuItem key={tankString} value={tankString}>{tankString}</MenuItem>;\n            })}\n          </Select>\n        </FormControl>\n      ) : null}\n      <div style={{marginTop: \"20px\", marginBottom: \"20px\"}}>\n        <TextField\n          id=\"date\"\n          label=\"Start Date\"\n          type=\"date\"\n          defaultValue=\"2022/02/03\"\n          sx={{ width: 220 }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={datesRange.startDate}\n          onChange={e => handleDateRangeChange(e, 'startDate')}\n        />\n        <TextField\n          id=\"date\"\n          label=\"End Date\"\n          type=\"date\"\n          defaultValue=\"2022/02/03\"\n          sx={{ width: 220 }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={datesRange.endDate}\n          onChange={e => handleDateRangeChange(e, 'endDate')}\n        />\n      </div>\n      <HistoricalChart data={data} tankSelected={tank} datesRange={datesRange}/>\n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        onClose={(event, reason) => handleClose(event, reason)}\n      >\n        {componentState.notificationType ? (\n          <Alert\n            onClose={(event, reason) => handleClose(event, reason)}\n            severity={componentState.notificationType}\n            sx={{ width: \"100%\" }}\n          >\n            {componentState.notificationMessage}\n          </Alert>\n        ) : null}\n      </Snackbar>\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function DataSection(props) {\n\tconst navigate = useNavigate();\n\tconst { tankId, tank } = props;\n\t//const [tankData, setTankData] = useState(tank);\n\n\tconsole.log(\"----DATA SECTION TANK DATA--------\");\n\tconsole.log(tank);\n\n\tuseEffect(() => {}, []);\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\twidth: \"40%\",\n\t\t\t\tbackgroundColor: \"\",\n\t\t\t\ttextAlign: \"center\",\n\t\t\t}}>\n\t\t\t<div style={{ marginBottom: \"15px\" }}>\n\t\t\t\t<Button sx={{backgroundColor: \"#54008c\"}} variant='contained'>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextDecoration: \"none\",\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tto='/tanks'>\n\t\t\t\t\t\tGo back\n\t\t\t\t\t</Link>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<h2>{tankId}</h2>\n\t\t\t<h4>Water Level</h4>\n\t\t\t<Stack justifyContent='center' direction='row' spacing={2}>\n\t\t\t\t<span>Min: {tank ? tank.WtrLvlMin : \"--\"}</span>\n\t\t\t\t<span>Max: {tank ? tank.WtrLvlMax : \"--\"}</span>\n\t\t\t</Stack>\n\n\t\t\t<h4>%Oxygen</h4>\n\t\t\t<Stack justifyContent='center' direction='row' spacing={2}>\n\t\t\t\t<span>Min: {tank ? tank.OxygenPercentageMin : \"--\"}</span>\n\t\t\t\t<span>Max: {tank ? tank.OxygenPercentageMax : \"--\"}</span>\n\t\t\t</Stack>\n\n\t\t\t<h4>Ph</h4>\n\t\t\t<Stack justifyContent='center' direction='row' spacing={2}>\n\t\t\t\t<span>Min: {tank ? tank.PhMin : \"--\"}</span>\n\t\t\t\t<span>Max: {tank ? tank.PhMax : \"--\"}</span>\n\t\t\t</Stack>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nexport default function VisualizationSection(props) {\n\tconst { tank, tankParameters } = props;\n\tconst [data, setData] = useState({\n\t\tlabels: [\"Water Level\", \"%Oxygen\", \"Ph\"],\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"\",\n\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\"rgb(255, 99, 132)\",\n\t\t\t\t\t\"rgb(54, 99, 132)\",\n\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t],\n\t\t\t\tborderColor: \"rgb(255, 99, 132)\",\n\t\t\t\tdata: [100, 40, 10],\n\t\t\t},\n\t\t],\n\t});\n\tconst [options, setOptions] = useState(null);\n\n\tconst getMaxOfArray = (numArray) => {\n\t\treturn Math.max.apply(null, numArray);\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.log(\"-------TANK DATA!------\");\n\t\tconsole.log(tank);\n        if(tankParameters) {\n            const biggestNumber = getMaxOfArray([tankParameters.WtrLvlMax, tankParameters.OxygenPercentageMax, tankParameters.PhMax]);\n\t\t\tconsole.log(biggestNumber);\n            setOptions({\n                indexAxis: \"x\",\n                scales: {\n                    y: {\n\n                        min: 0,\n                        max: biggestNumber+5,\n                    },\n                },\n            });\n        }\n\t\tif (tank) {\n            console.log(\"inside the update data\");\n            setData({\n\t\t\t\t...data,\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\"rgb(255, 99, 132)\",\n\t\t\t\t\t\t\t\"rgb(54, 99, 132)\",\n\t\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tborderColor: \"rgb(255, 99, 132)\",\n\t\t\t\t\t\tdata: [tank.WtrLvl, tank.OxygenPercentage, tank.Ph],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\t}, [\n\t\ttank.WtrLvl,\n\t\ttank.OxygenPercentage,\n\t\ttank.Ph,\n\t\ttankParameters.WtrLvlMax,\n\t\ttankParameters.OxygenPercentageMax,\n\t\ttankParameters.PhMax\n\t]);\n\t/*\nWtrLvlMin: jsonData.parameters[0].tankMinValue,\n\t\t\t\t\tWtrLvlMax: jsonData.parameters[0].tankMaxValue,\n\t\t\t\t\tOxygenPercentageMin:jsonData.parameters[1].tankMinValue,\n\t\t\t\t\tOxygenPercentageMax: jsonData.parameters[1].tankMaxValue,\n\t\t\t\t\tPhMin:jsonData.parameters[2].tankMinValue,\n\t\t\t\t\tPhMax: jsonData.parameters[2].tankMaxValue,\n*/\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\twidth: \"60%\",\n\t\t\t\tbackgroundColor: \"\",\n\t\t\t}}>\n\t\t\t<Bar data={data} options={options} />\n\t\t</div>\n\t);\n}\n\n/*\ndata: {\n\t\t\tlabels: [\"MT001\"],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"\",\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\"rgb(255, 99, 132)\",\n\t\t\t\t\t\t\"rgb(54, 99, 132)\",\n\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t],\n\t\t\t\t\tborderColor: \"rgb(255, 99, 132)\",\n\t\t\t\t\tdata: [8],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\toptions: {\n\t\t\tindexAxis: \"x\",\n\t\t\tscales: {\n\t\t\t\ty: {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n*/\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport {\n\tUserContext,\n\tNavigationContext,\n\tTankContext,\n} from \"../components/Context\";\nimport { useLocation } from \"react-router-dom\";\nimport { styled } from \"@mui/material/styles\";\nimport socketIOClient from \"socket.io-client\";\n\nimport { socketApiRoute } from \"../api/ApiProperties\";\nimport { apiModes } from \"../api/ApiProperties\";\nimport useFetch from \"../hooks/useFetch\";\nimport DataSection from \"../components/details_tank/DataSection\";\nimport VisualizationSection from \"../components/details_tank/VisualizationSection\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n\t...theme.typography.body2,\n\tpadding: theme.spacing(1),\n\ttextAlign: \"center\",\n\tcolor: theme.palette.text.secondary,\n}));\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n\treturn <MuiAlert elevation={6} ref={ref} variant='filled' {...props} />;\n});\n\nexport default function DetailsTank() {\n\t//const { tankContextData, setTankContextData } = React.useContext(TankContext);\n\t//console.log(tankContextData.tankSelected);\n\tconst { user, setUser } = useContext(UserContext);\n\tconst location = useLocation();\n\tconst navigate = useNavigate();\n\tconst [tank, setTank, doFetch] = useFetch({\n\t\tWtrLvl: null,\n\t\tOxygenPercentage: null,\n\t\tPh: null,\n\t});\n\tconst [tankParameters, setTankParameters] = useState({\n\t\tWtrLvl: null,\n\t\tOxygenPercentage: null,\n\t\tPh: null,\n\t\tWtrLvlMax: null,\n\t\tOxygenPercentageMax: null,\n\t\tPhMax: null,\n\t});\n\tconst [socket, setSocket] = useState(null);\n\tconst [componentState, setComponentState] = useState({\n\t\tnotificationMessage: \"\",\n\t\tnotificationType: \"\",\n\t});\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleClose = (event, reason) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(false);\n\t};\n\tconst updateDashboard = async (data) => {\n\t\tlet tankObjects = data.filter(tankData => tankData.id == location.state.tankId);\n\t\tif(tankObjects.length) {\n\t\t\tsetTank({\n\t\t\t\tWtrLvl: tankObjects[0].wtrLvlValue,\n\t\t\t\tOxygenPercentage: tankObjects[0].oxygenPercentageValue,\n\t\t\t\tPh: tankObjects[0].phValue,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst stablishSocketConnection = async (jsonData) => {\n\t\tlet socket = socketIOClient(socketApiRoute);\n\t\tsetSocket(socket);\n\t\tsocket.on(\"connect\", () => {\n\t\t\tsocket.emit(\"join_user_sessionid\", {\n\t\t\t\temail: localStorage.getItem(\"email\"),\n\t\t\t\tcompany: localStorage.getItem(\"company\"),\n\t\t\t});\n\t\t\tsetOpen(true);\n\t\t\tsetComponentState({\n\t\t\t\tnotificationMessage: \"Successfully connected\",\n\t\t\t\tnotificationType: \"success\",\n\t\t\t});\n\t\t});\n\t\tsocket.on(\"success_joinning\", (msj) => {\n\t\t\tconsole.log(\"message from server conection: \" + msj.message);\n\t\t});\n\t\tsocket.on(\"get_tank_data\", (data) => {\n\t\t\tconsole.log(\"------TANK DATA FROM SERVER-------\");\n\t\t\tconsole.log(data);\n\t\t\tupdateDashboard(data);\n\t\t});\n\t\tsocket.on(\"connect_error\", (err) =>\n\t\t\tconsole.log(\"connect_error: \" + err.message)\n\t\t);\n\t\tsocket.on(\"connect_failed\", (err) =>\n\t\t\tconsole.log(\"connect_failed: \" + err.message)\n\t\t);\n\t\tsocket.on(\"disconnect\", (err) => {\n\t\t\tsetOpen(true);\n\t\t\tsetComponentState({\n\t\t\t\tnotificationMessage: \"Connection lost :(\",\n\t\t\t\tnotificationType: \"error\",\n\t\t\t});\n\t\t});\n\t\treturn socket;\n\t};\n\n\tuseEffect(() => {\n\t\tvar socket = null;\n\t\tconst stablishConnection = async () => {\n\t\t\ttry {\n\t\t\t\t/*httpMethod, apiMode, authorization, payload */\n\t\t\t\tconst jsonData = await doFetch(\"GET\", apiModes.FETCHTANK, true, {\n\t\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\t\ttankId: location.state.tankId,\n\t\t\t\t});\n\t\t\t\tconsole.log(jsonData);\n\t\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\t\tsetUser({\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\temail: \"\",\n\t\t\t\t\t\tcompany: \"\",\n\t\t\t\t\t\taccess_token: \"\",\n\t\t\t\t\t});\n\t\t\t\t\tnavigate(\"/log-in\");\n\t\t\t\t} else if (jsonData.msg === \"Successfully fetched\") {\n\t\t\t\t\tconsole.log(\"-----DETAILS TANK DATA PARAMETERS----\");\n\t\t\t\t\tconsole.log(jsonData.parameters);\n\n\t\t\t\t\tsetTankParameters({\n\t\t\t\t\t\tWtrLvlMin: jsonData.parameters[0].tankMinValue,\n\t\t\t\t\t\tWtrLvlMax: jsonData.parameters[0].tankMaxValue,\n\t\t\t\t\t\tOxygenPercentageMin: jsonData.parameters[1].tankMinValue,\n\t\t\t\t\t\tOxygenPercentageMax: jsonData.parameters[1].tankMaxValue,\n\t\t\t\t\t\tPhMin: jsonData.parameters[2].tankMinValue,\n\t\t\t\t\t\tPhMax: jsonData.parameters[2].tankMaxValue,\n\t\t\t\t\t});\n\t\t\t\t\tsocket = await stablishSocketConnection(jsonData);\n\t\t\t\t}\n\t\t\t\treturn socket;\n\t\t\t} catch (error) {\n\t\t\t\tsetComponentState({\n\t\t\t\t\tnotificationMessage: \"Could not stablish connection :(\",\n\t\t\t\t\tnotificationType: \"error\",\n\t\t\t\t});\n\t\t\t\tsetOpen(true);\n\t\t\t}\n\t\t};\n\n\t\tif (!socket) {\n\t\t\tstablishConnection();\n\t\t}\n\n\t\treturn () => {\n\t\t\tconsole.log(socket);\n\t\t\tif (socket) {\n\t\t\t\tsocket.close();\n\t\t\t}\n\t\t};\n\t}, []);\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tmarginTop: \"100px\",\n\t\t\t}}>\n\t\t\t<div style={{ textAlign: \"center\" }}>\n\t\t\t\t<h1>Tank Visualization</h1>\n\t\t\t</div>\n\t\t\t<div style={{ marginLeft: \"auto\", width: \"100%\" }}>\n\t\t\t\t<Stack\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmarginTop: \"10px\",\n\t\t\t\t\t}}\n\t\t\t\t\tjustifyContent='center'\n\t\t\t\t\tdirection={{ xs: \"column\", sm: \"row\" }}\n\t\t\t\t\tspacing={{ xs: 1, sm: 2, md: 4 }}>\n\t\t\t\t\t<DataSection tankId={location.state.tankId} tank={tankParameters} />\n\t\t\t\t\t<VisualizationSection\n\t\t\t\t\t\ttank={{\n\t\t\t\t\t\t\tWtrLvl: tank ? tank.WtrLvl : null,\n\t\t\t\t\t\t\tOxygenPercentage: tank ? tank.OxygenPercentage : null,\n\t\t\t\t\t\t\tPh: tank ? tank.Ph : null,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttankParameters={tankParameters}\n\t\t\t\t\t/>\n\t\t\t\t</Stack>\n\t\t\t</div>\n\t\t\t<Snackbar\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={3000}\n\t\t\t\tonClose={(event, reason) => handleClose(event, reason)}>\n\t\t\t\t{componentState.notificationType ? (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tonClose={(event, reason) => handleClose(event, reason)}\n\t\t\t\t\t\tseverity={componentState.notificationType}\n\t\t\t\t\t\tsx={{ width: \"100%\" }}>\n\t\t\t\t\t\t{componentState.notificationMessage}\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null}\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport TextField from \"@mui/material/TextField\";\n\nexport default function ChartComponent(props) {\n\tconst { scaleRanges, setScaleRanges, tanksSelected, tanksData, category } =\n\t\tprops;\n\tconst [maxScaleField, setMaxScaleField] = useState(scaleRanges.max);\n\tconst [graph, setGraph] = useState({\n\t\tdata: {\n\t\t\tlabels: [\"MT001\"],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"\",\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\"rgb(255, 99, 132)\",\n\t\t\t\t\t\t\"rgb(54, 99, 132)\",\n\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t],\n\t\t\t\t\tborderColor: \"rgb(255, 99, 132)\",\n\t\t\t\t\tdata: [8],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\toptions: {\n\t\t\tindexAxis: \"x\",\n\t\t\tscales: {\n\t\t\t\ty: {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: maxScaleField,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\tuseEffect(() => {\n\t\tconsole.log(graph.options);\n\t\tlet waterLevel = [];\n\t\tlet oxygenPercentage = [];\n\t\tlet ph = [];\n\t\tlet dataToDisplay = null;\n\t\tconsole.log(\"PRINTING SELECTED TANKS DATA IN CHART COMPONENT\");\n\t\tconsole.log(tanksSelected);\n\t\tconsole.log(\"PRINTING TANKS DATA\");\n\t\tconsole.log(tanksData);\n\t\tif(tanksSelected.length && tanksData.length) {\n\t\t\ttanksSelected.forEach((item, index) => { //[\"E1000\", \"E1001\"]\n\t\t\t\tconsole.log(\"TANK SELECTED IS \" + item)\n\t\t\t\tlet tankDataObject = tanksData.filter(tankData => tankData.id == item);//get the objects here\n\t\t\t\tconsole.log(\"PRINTING TANK DATA OBJECT\")\n\t\t\t\tconsole.log(tankDataObject)\n\t\t\t\ttankDataObject = tankDataObject[0];\n\t\t\t\tif(tankDataObject !== undefined && tankDataObject !== null) {\n\t\t\t\t\twaterLevel.push(tankDataObject.wtrLvlValue);\n\t\t\t\t\toxygenPercentage.push(tankDataObject.oxygenPercentageValue);\n\t\t\t\t\tph.push(tankDataObject.phValue);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t\tconsole.log(waterLevel);\n\n\t\t\tif (category === \"Water Level\") {\n\t\t\t\tdataToDisplay = waterLevel;\n\t\t\t} else if (category === \"%Oxygen\") {\n\t\t\t\tdataToDisplay = oxygenPercentage;\n\t\t\t} else if (category === \"Ph\") {\n\t\t\t\tdataToDisplay = ph;\n\t\t\t}\n\t\t}\n\t\tsetGraph({\n\t\t\tdata: {\n\t\t\t\tlabels: tanksSelected,\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\"rgb(255, 99, 132)\",\n\t\t\t\t\t\t\t\"rgb(54, 99, 132)\",\n\t\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t\t\"rgb(54, 99, 43)\",\n\t\t\t\t\t\t],\n\t\t\t\t\t\tborderColor: \"rgb(255, 99, 132)\",\n\t\t\t\t\t\tdata: dataToDisplay,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\t...graph.options,\n\t\t\t\tscales: {\n\t\t\t\t\ty: scaleRanges,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}, [scaleRanges, tanksSelected, tanksData, category]);\n\n\treturn (\n\t\t<div>\n\t\t\t<TextField\n\t\t\t\tid='outlined-basic'\n\t\t\t\tsx={{\n\t\t\t\t\tminWidth: \"50px\"\n\t\t\t\t}}\n\t\t\t\tlabel='Max Value'\n\t\t\t\ttype='number'\n\t\t\t\tvariant='outlined'\n\t\t\t\tvalue={maxScaleField}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetMaxScaleField(e.target.value);\n\t\t\t\t}}\n\t\t\t\tonKeyUp={(e) => {\n\t\t\t\t\tif (e.code === \"Enter\") {\n\t\t\t\t\t\tif(e.target.value > 0) {\n\t\t\t\t\t\t\tsetScaleRanges({\n\t\t\t\t\t\t\t\t...scaleRanges,\n\t\t\t\t\t\t\t\tmax: parseInt(e.target.value)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(\"Enter pressed!\");\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Bar data={graph.data} options={graph.options} />\n\t\t</div>\n\t);\n}\n","import * as React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\n\nexport default function TanksList(props) {\n  const [checked, setChecked] = React.useState([0]);\n  const { allTanks, updateTanksSelected } = props;\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    \n    if(newChecked.indexOf(0) !== -1) {\n      newChecked.splice(newChecked.indexOf(0), 1);\n    }\n    \n    updateTanksSelected(newChecked);\n    setChecked(newChecked);\n  };\n  \n  return (\n    <List \n      sx={{ \n        width: '100%', \n        maxWidth: 360,\n        borderRadius: \"10px\"\n      }}>\n      {allTanks.map((value) => {\n        const labelId = `checkbox-list-label-${value}`;\n\n        return (\n          <ListItem\n            key={value}\n            sx={{margin: \"auto\"}}\n            disablePadding>\n            <ListItemButton\n              role={undefined} \n              onClick={handleToggle(value)} \n              dense>\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText sx={{color: \"#000000\", fontStyle: \"bold\", fontWeight: 500}} id={labelId} primary={value} />\n            </ListItemButton>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { Bar } from \"react-chartjs-2\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport { styled } from \"@mui/material/styles\";\n\nimport useFetch from \"../hooks/useFetch\";\nimport { GET } from \"../api/Get\";\nimport ChartComponent from \"../components/ChartComponent\";\nimport { socketApiRoute } from \"../api/ApiProperties\";\nimport { UserContext, NavigationContext } from \"../components/Context\";\nimport { apiModes } from \"../api/ApiProperties\";\nimport TanksList from \"../components/TanksList\";\n\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = socketApiRoute;\n\nconst categories = [\"Water Level\", \"%Oxygen\", \"Ph\"];\nconst dataFromServerDummy = {\n\ttanks: [\"MT001\", \"MT002\", \"MT003\", \"MT004\", \"MT005\"],\n\tdata: [10, 5, 2, 6, 8],\n};\nconst Item = styled(Paper)(({ theme }) => ({\n\t...theme.typography.body2,\n\tpadding: theme.spacing(1),\n\ttextAlign: \"center\",\n\tcolor: theme.palette.text.secondary,\n}));\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n\treturn <MuiAlert elevation={6} ref={ref} variant='filled' {...props} />;\n});\n\nfunction BarChart() {\n\tdocument.title = \"Visualization\";\n\tconst navigate = useNavigate();\n\tconst {navigation, setNavigation} = React.useContext(NavigationContext);\n\tconst { user, setUser } = useContext(UserContext);\n\tconst [open, setOpen] = useState(false);\n\tconst [tanksSelected, setTanksSelected] = useState([]);\n\tconst [tanks, setTanks, doFetch] = useFetch([]);\n\tconst [tanksData, setTanksData] = useState([]);\n\tconst [localUser, setLocalUser] = useState({\n\t\tname: \"\",\n\t\tlastName: \"\",\n\t\temail: \"\",\n\t\tcompany: \"\",\n\t});\n\tconst [socket, setSocket] = useState(null);\n\tconst [componentState, setComponentState] = useState({\n\t\tnotificationMessage: \"\",\n\t\tnotificationType: \"\",\n\t});\n\tconst [scaleRanges, setScaleRanges] = useState({\n\t\tmin: 0,\n\t\tmax: 500,\n\t});\n\tconst [category, setCategory] = useState(\"Water Level\");\n\t\n\tconst handleClose = (event, reason) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn;\n\t\t}\n\t\tsetOpen(false);\n\t};\n\tconst updateTanksSelected = async (tanksSelected) => {\n\t\tsetTanksSelected(tanksSelected);\n\t};\n\n\tconst stablishSocketConnection = (jsonData) => {\n\t\tvar socket = socketIOClient(ENDPOINT);\n\t\tsocket.on(\"connect\", () => {\n\t\t\tsetOpen(true);\n\t\t\tsetSocket(socket);\n\t\t\tsetComponentState({\n\t\t\t\tnotificationMessage: \"Successfully connected\",\n\t\t\t\tnotificationType: \"success\",\n\t\t\t});\n\n\t\t\tconsole.log(\"email \" + jsonData.email);\n\t\t\tconsole.log(\"name \" + jsonData.name);\n\t\t\tif (jsonData.email) {\n\t\t\t\tsocket.emit(\"join_user_sessionid\", {\n\t\t\t\t\temail: jsonData.email,\n\t\t\t\t\tcompany: jsonData.company,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tsocket.on(\"message\", (msj) => {\n\t\t\tconsole.log(\"message from server conection: \" + msj);\n\t\t});\n\t\tsocket.on(\"success_joinning\", (msj) => {\n\t\t\tconsole.log(\"message from server conection: \" + msj.message);\n\t\t});\n\t\tsocket.on('tanks_data', (data) => {\n\t\t\tconsole.log(\"----FROM SOCKET TANKS DATA------\")\n\t\t\tconsole.log(data)\n\t\t\tsetTanksData(data);\n\t\t});\n\t\tsocket.on(\"connect_error\", (err) =>\n\t\t\tconsole.log(\"connect_error: \" + err.message)\n\t\t);\n\t\tsocket.on(\"connect_failed\", (err) =>\n\t\t\tconsole.log(\"connect_failed: \" + err.message)\n\t\t);\n\t\tsocket.on(\"disconnect\", (err) => {\n\t\t\tsetOpen(true);\n\t\t\tsetComponentState({\n\t\t\t\tnotificationMessage: \"Connection lost :(\",\n\t\t\t\tnotificationType: \"error\",\n\t\t\t});\n\t\t});\n\n\t\treturn socket;\n\t};\n\n\tuseEffect(() => {\n\t\tsetNavigation({\n\t\t\t...navigation,\n\t\t\tcurrentPage: \"Monitor Tanks\"\n\t\t});\n\t\tvar socket = null;\n\t\tasync function stablishConnection() {\n\t\t\ttry {\n\t\t\t\tvar connectionStablished = false;\n\t\t\t\tconst jsonData = await doFetch(\"GET\", apiModes.FETCHTANKS, true, {\n\t\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\t});\n\n\t\t\t\tif (jsonData.msg === \"Success fetching\") {\n\t\t\t\t\tconnectionStablished = true;\n\t\t\t\t\tsetTanks(jsonData.tanks);\n\t\t\t\t\tsetUser({\n\t\t\t\t\t\tname: jsonData.name,\n\t\t\t\t\t\temail: jsonData.email,\n\t\t\t\t\t\trole: jsonData.role,\n\t\t\t\t\t\tcompany: jsonData.company,\n\t\t\t\t\t});\n\t\t\t\t} else if (jsonData.msg === \"Token has expired\") {\n\t\t\t\t\tlocalStorage.setItem(\"accessToken\", \"\");\n\t\t\t\t\tlocalStorage.setItem(\"refreshToken\", \"\");\n\t\t\t\t\tsetUser({\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\temail: \"\",\n\t\t\t\t\t\tcompany: \"\",\n\t\t\t\t\t\taccess_token: \"\",\n\t\t\t\t\t});\n\t\t\t\t\tnavigate(\"/log-in\");\n\t\t\t\t}\n\n\t\t\t\tif (connectionStablished) {\n\t\t\t\t\tsocket = stablishSocketConnection(jsonData);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetComponentState({\n\t\t\t\t\tnotificationMessage: \"Could not stablish connection :(\",\n\t\t\t\t\tnotificationType: \"error\",\n\t\t\t\t});\n\t\t\t\tsetOpen(true);\n\t\t\t}\n\t\t}\n\t\tif (!socket) {\n\t\t\tstablishConnection();\n\t\t} else {\n\t\t}\n\t\treturn () => {\n\t\t\tif (socket) {\n\t\t\t\tsocket.close();\n\t\t\t}\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tmarginTop: \"90px\",\n\t\t\t\tcolor: \"black\",\n\t\t\t}}>\n\t\t\t<div style={{ textAlign: \"center\" }}>\n\t\t\t\t<h1 style={{fontSize: \"30px\", fontWeight: 500}}>{localStorage.getItem(\"company\")} Tanks</h1>\n\t\t\t\t<FormControl component='fieldset'>\n\t\t\t\t\t<FormLabel\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tcolor: \"black\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcomponent='legend'>\n\t\t\t\t\t\tSelect a Category\n\t\t\t\t\t</FormLabel>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\trow={true}\n\t\t\t\t\t\taria-label='gender'\n\t\t\t\t\t\tdefaultValue={\"Water Level\"}\n\t\t\t\t\t\tname='radio-buttons-group'\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tconsole.log(e.target.value);\n\t\t\t\t\t\t\tsetCategory(e.target.value);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue={categories[0]}\n\t\t\t\t\t\t\tcontrol={<Radio sx={{ color: \"black\" }} />}\n\t\t\t\t\t\t\tlabel={categories[0]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue={categories[1]}\n\t\t\t\t\t\t\tcontrol={<Radio sx={{ color: \"black\" }} />}\n\t\t\t\t\t\t\tlabel={categories[1]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue={categories[2]}\n\t\t\t\t\t\t\tcontrol={<Radio sx={{ color: \"black\" }} />}\n\t\t\t\t\t\t\tlabel={categories[2]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t</div>\n\t\t\t<Stack\n\t\t\t\tdirection={{ xs: \"column\", sm: \"row\" }}\n\t\t\t\tjustifyContent='space-evenly'\n\t\t\t\talignItems='center'\n\t\t\t\tspacing={2}\n\t\t\t\tmt={5}>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: \"rgba(255, 255, 255, 0.7)\",\n\t\t\t\t\t\tpadding: \"10px\",\n\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\twidth: \"auto\",\n\t\t\t\t\t}}>\n\t\t\t\t\t<h3 style={{ color: \"black\", fontWeight: 500 }}>Tanks Available</h3>\n\t\t\t\t\t<TanksList\n\t\t\t\t\t\tallTanks={tanks}\n\t\t\t\t\t\tupdateTanksSelected={updateTanksSelected}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"60%\",\n\t\t\t\t\t\tmarginLeft: \"15px\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(255, 255, 255, 0.7)\",\n\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\tpadding: \"15px\",\n\t\t\t\t\t}}>\n\t\t\t\t\t<ChartComponent\n\t\t\t\t\t\tscaleRanges={scaleRanges}\n\t\t\t\t\t\tsetScaleRanges={setScaleRanges}\n\t\t\t\t\t\ttanksSelected={tanksSelected}\n\t\t\t\t\t\ttanksData={tanksData}\n\t\t\t\t\t\tcategory={category}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Stack>\n\t\t\t<Snackbar\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={3000}\n\t\t\t\tonClose={() => handleClose()}>\n\t\t\t\t{componentState.notificationType ? (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\tseverity={componentState.notificationType}\n\t\t\t\t\t\tsx={{ width: \"100%\" }}>\n\t\t\t\t\t\t{componentState.notificationMessage}\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null}\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\nimport Avatar from '@mui/material/Avatar';\nimport BuildIcon from '@mui/icons-material/Build';\nimport GroupIcon from '@mui/icons-material/Group';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ConnectWithoutContactIcon from '@mui/icons-material/ConnectWithoutContact';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport HomeIcon from '@mui/icons-material/Home';\nimport {\n    Link\n} from \"react-router-dom\";\n\nimport {\n    returnVisualization, \n    returnUserOptions, \n    returnTanksOptions\n} from \"../utility/Accounts\";\n\n\nfunction stringToColor(string) {\n\tlet hash = 0;\n\tlet i;\n\n\t/* eslint-disable no-bitwise */\n\tfor (i = 0; i < string.length; i += 1) {\n\t\thash = string.charCodeAt(i) + ((hash << 5) - hash);\n\t}\n\n\tlet color = \"#\";\n\n\tfor (i = 0; i < 3; i += 1) {\n\t\tconst value = (hash >> (i * 8)) & 0xff;\n\t\tcolor += `00${value.toString(16)}`.substr(-2);\n\t}\n\t/* eslint-enable no-bitwise */\n\n\treturn color;\n}\n\nfunction stringAvatar(name) {\n\treturn {\n\t\tsx: {\n\t\t\tbgcolor: stringToColor(name),\n\t\t\tmargin: \"auto\",\n\t\t\twidth: 150,\n\t\t\theight: 150,\n\t\t\tfontSize: \"70px\",\n\t\t},\n\t\tchildren: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n\t};\n}\n\nexport default function SideBar(props) {\n    const { toggleDrawer, state } = props;\n    console.log(localStorage.getItem(\"role\"));\n    \n    const renderListItem = (text) => {\n        let icon = null;\n        let to = \"/\";\n    \n        switch(text) {\n          case 'Profile':\n            icon = <AccountCircleIcon />\n            to = \"/profile\";\n            break;\n          case 'Home':\n            icon = <HomeIcon />\n            to = \"/\";\n            break;\n          case 'Visualization':\n            icon = <EqualizerIcon />\n            to = \"/tanks-monitor\";\n            break;\n          case 'Historic':\n            icon = <TimelineIcon />\n            to = \"/historic\";\n            break;\n          case 'Users':\n            icon = <GroupIcon />\n            to = '/users';\n            break;\n            case 'Tanks':\n            icon = <RemoveRedEyeIcon />\n            to = '/tanks';\n            break;\n          default:\n            icon = null;\n        }\n        \n        return (\n          <Link style={{textDecoration: \"none\", color: \"black\"}} to={to}>\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {icon}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        );\n    };\n    \n\n    const list = (anchor) => (\n        <Box\n          sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n          <List>\n            {localStorage.getItem(\"role\") ? returnUserOptions(localStorage.getItem(\"role\")).map((text, index) => (\n              renderListItem(text)\n            )) : null}\n          </List>\n          <Divider />\n          <List>\n            {localStorage.getItem(\"role\") ? returnVisualization(localStorage.getItem(\"role\")).map((text, index) => (\n                renderListItem(text)\n            )) : null}\n          </List>\n          <Divider />\n          <List>\n            {returnTanksOptions(localStorage.getItem(\"role\")) ? (returnTanksOptions(localStorage.getItem(\"role\")).map((text, index) => (\n                renderListItem(text)\n            ))) : null}\n          </List>\n        </Box>\n    );\n\n    return(\n        <Drawer\n                anchor={'left'}\n                open={state['left']}\n                onClose={toggleDrawer('left', false)}>\n            <div \n              style={{\n                marginLeft: \"auto\", \n                marginRight: \"auto\", \n                marginTop: \"10px\"}}>\n                <Avatar \n                  {...stringAvatar(`${localStorage.getItem(\"name\")} ${localStorage.getItem(\"lastName\")}`)} \n                />\n            </div>\n            {list('left')}\n        </Drawer>\n    );\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport { UserContext, NavigationContext } from './Context';\nimport SideBar from \"./SideBar\";\n\n\nexport default function NavBar() {\n\n  const linkStyle = {\n    textDecoration: 'none',\n    color: \"white\"\n  };\n  const buttonStyle = {\n    color: 'white'\n  }\n  const {navigation, setNavigation} = React.useContext(NavigationContext);\n  const {user, setUser} = React.useContext(UserContext);\n  const [state, setState] = React.useState({\n    left: false\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  \n  return (\n    <Box \n      sx={{ \n        flexGrow: 1\n      }} \n      style={{\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        width: '100%',\n        zIndex: 1}}>\n      <AppBar \n        position=\"static\" \n        sx={{ \n          backgroundColor: \"#54008c\"\n        }}>\n        <Toolbar>\n        {(user.access_token || localStorage.getItem(\"accessToken\"))? (\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            onClick={toggleDrawer(\"left\", true)}>\n            <MenuIcon sx={{\n              fontSize: \"40px\"\n            }}/>\n          </IconButton>\n        ) : null}\n          <SideBar toggleDrawer={toggleDrawer} state={state}/>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            {navigation.currentPage}\n          </Typography>\n          {(user.access_token || localStorage.getItem(\"accessToken\")) ? (\n            <React.Fragment>\n              <Button \n                onClick={() => setNavigation({\n                  ...navigation,\n                  currentPage: \"Home\"\n                })} \n                style={buttonStyle} \n                color=\"inherit\">\n                <Link to=\"/\" style={linkStyle}>Home</Link>\n              </Button>\n              <Button \n                color=\"inherit\"\n                onClick={() => {\n                  localStorage.setItem(\"accessToken\", \"\");\n                  localStorage.setItem(\"refreshToken\", \"\");\n                  setUser({\n                    name: \"\",\n                    lastName: \"\",\n                    company: \"\",\n                    access_token: \"\"\n                  })\n                }}\n                style={buttonStyle}>\n                <Link to=\"/log-in\" style={linkStyle}>Log Out</Link>\n              </Button>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Button \n                onClick={() => setNavigation({\n                  ...navigation,\n                  currentPage: \"Home\"\n                })} \n                style={buttonStyle} \n                color=\"inherit\">\n                <Link to=\"/\" style={linkStyle}>Home</Link>\n              </Button>\n              <Button \n                onClick={() => setNavigation({\n                  ...navigation,\n                  currentPage: \"Sign Up\"\n                })} \n                style={buttonStyle} \n                color=\"inherit\">\n                <Link to=\"/sign-up\" style={linkStyle}>Sign Up</Link>\n              </Button>\n\n              <Button \n                color=\"inherit\"\n                onClick={() => setNavigation({\n                  ...navigation,\n                  currentPage: \"Log In\"\n                })} \n                style={buttonStyle} >\n                <Link to=\"/log-in\" style={linkStyle}>Log In</Link>\n              </Button>\n            </React.Fragment>\n          )}\n      \n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { deepOrange, deepPurple } from \"@mui/material/colors\";\nimport BusinessIcon from \"@mui/icons-material/Business\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport { styled } from \"@mui/material/styles\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nimport useFetch from \"../hooks/useFetch\";\nimport { UserContext, NavigationContext } from \"../components/Context\";\nimport { GET } from \"../api/Get\";\nimport { apiModes } from \"../api/ApiProperties\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n\t...theme.typography.body2,\n\tpadding: theme.spacing(1),\n\ttextAlign: \"center\",\n\twidth: \"100%\",\n\tcolor: theme.palette.text.secondary,\n}));\n\nconst skelethonStyle = {\n\tmargin: \"auto\",\n};\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n\treturn <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction stringToColor(string) {\n\tlet hash = 0;\n\tlet i;\n\n\t/* eslint-disable no-bitwise */\n\tfor (i = 0; i < string.length; i += 1) {\n\t\thash = string.charCodeAt(i) + ((hash << 5) - hash);\n\t}\n\n\tlet color = \"#\";\n\n\tfor (i = 0; i < 3; i += 1) {\n\t\tconst value = (hash >> (i * 8)) & 0xff;\n\t\tcolor += `00${value.toString(16)}`.substr(-2);\n\t}\n\t/* eslint-enable no-bitwise */\n\n\treturn color;\n}\n\nfunction stringAvatar(name) {\n\treturn {\n\t\tsx: {\n\t\t\tbgcolor: stringToColor(name),\n\t\t\tmargin: \"auto\",\n\t\t\twidth: 150,\n\t\t\theight: 150,\n\t\t\tfontSize: \"70px\",\n\t\t},\n\t\tchildren: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n\t};\n}\n\nexport default function Profile() {\n\tconst { user, setUser } = React.useContext(UserContext);\n\tconst {navigation, setNavigation} = React.useContext(NavigationContext);\n\tconst [open, setOpen] = useState(false);\n\tconst navigate = useNavigate();\n\tdocument.title = \"User\";\n\tconst [localUser, setLocalUser, doFetch] = useFetch({\n\t\tname: \"\",\n\t\tlastName: \"\",\n\t\temail: \"\",\n\t\trole: \"\",\n\t\tcompany: \"\",\n\t});\n\tconst [componentState, setComponentState] = useState({\n\t\tnotificationMessage: \"\",\n\t\tnotificationType: \"\",\n\t});\n\n\tconst handleClose = (event, reason) => {\n\t\tif (reason === \"clickaway\") {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpen(false);\n\t};\n\n\tuseEffect(() => {\n\t\tsetNavigation({\n\t\t\t...navigation,\n\t\t\tcurrentPage: \"Profile\"\n\t\t});\n\t\tasync function getUser() {\n\t\t\ttry {\n\t\t\t\tconst jsonData = await doFetch(\"GET\", apiModes.GETUSER, true, {\n\t\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\t});\n\n\t\t\t\tif (jsonData.msg === \"Succesfully authenticated\") {\n\t\t\t\t\tsetLocalUser({\n\t\t\t\t\t\tname: jsonData.name,\n\t\t\t\t\t\tlastName: jsonData.last_name,\n\t\t\t\t\t\temail: jsonData.email,\n\t\t\t\t\t\trole: jsonData.role,\n\t\t\t\t\t\tcompany: jsonData.company,\n\t\t\t\t\t});\n\t\t\t\t\tsetComponentState({\n\t\t\t\t\t\tnotificationMessage: \"Successfully connected\",\n\t\t\t\t\t\tnotificationType: \"success\",\n\t\t\t\t\t});\n\t\t\t\t\tsetOpen(true);\n\t\t\t\t} else if (jsonData.msg === \"Token has expired\") {\n\t\t\t\t\tlocalStorage.setItem(\"accessToken\", \"\");\n\t\t\t\t\tlocalStorage.setItem(\"refreshToken\", \"\");\n\t\t\t\t\tsetUser({\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\temail: \"\",\n\t\t\t\t\t\tcompany: \"\",\n\t\t\t\t\t\taccess_token: \"\",\n\t\t\t\t\t});\n\t\t\t\t\tnavigate(\"/log-in\");\n\t\t\t\t}\n\t\t\t} catch (error) {\n                setComponentState({\n                    notificationMessage: \"Could not stablish connection :(\",\n                    notificationType: \"error\",\n                });\n                setOpen(true);\n\t\t\t}\n\t\t}\n\t\tgetUser();\n\t}, []);\n\n\treturn (\n\t\t<div style={{ padding: \"5px\" }}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginTop: \"100px\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t    {(localUser.name && localUser.lastName) ? (\n                    <Avatar {...stringAvatar(`${localUser.name} ${localUser.lastName}`)} />\n                ) : (<Skeleton \n                        variant=\"circular\" \n                        width={150} \n                        height={150}\n                        style={{margin: \"auto\"}} />\n                )}\n\t\t\t</div>\n\t\t\t<Stack\n\t\t\t\tdirection={{ xs: \"column\", sm: \"row\" }}\n\t\t\t\tspacing={{ xs: 1, sm: 2, md: 4 }}\n\t\t\t\tjustifyContent=\"space-evenly\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tmt={2}\n\t\t\t>\n\t\t\t\t<Item>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{localUser.name ? (\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\tName: {localUser.name} {localUser.lastName}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Skeleton style={skelethonStyle} width={\"50%\"} height={50} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{localUser.email ? (\n\t\t\t\t\t\t\t<h1>Email: {localUser.email}</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Skeleton style={skelethonStyle} width={\"50%\"} height={50} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{localUser.role ? (\n\t\t\t\t\t\t\t<h1>Role: {localUser.role}</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Skeleton style={skelethonStyle} width={\"50%\"} height={50} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{localUser.company ? (\n\t\t\t\t\t\t\t<h1>Works at: {localUser.company}</h1>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Skeleton style={skelethonStyle} width={\"50%\"} height={50} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Item>\n\t\t\t</Stack>\n\t\t\t<Snackbar\n\t\t\t\topen={open}\n\t\t\t\tautoHideDuration={3000}\n\t\t\t\tonClose={() => handleClose()}\n\t\t\t>\n\t\t\t\t<Alert\n\t\t\t\t\tonClose={() => handleClose()}\n\t\t\t\t\tseverity={componentState.notificationType}\n\t\t\t\t\tsx={{ width: \"100%\" }}\n\t\t\t\t>\n\t\t\t\t\t{componentState.notificationMessage}\n\t\t\t\t</Alert>\n\t\t\t</Snackbar>\n\t\t</div>\n\t);\n}\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Alert from \"@mui/material/Alert\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Divider from \"@mui/material/Divider\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport useInputTank from \"../hooks/useInputTank\";\nimport useFetch from \"../hooks/useFetch\";\nimport { apiModes } from \"../api/ApiProperties\";\nimport {\n\tUserContext,\n\tNavigationContext,\n\tTankContext,\n} from \"../components/Context\";\n\nexport default function ModifyTank() {\n\t//const {tankContextData, setTankContextData} = React.useContext(TankContext);\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\tconst [tank, setTank, doFetch] = useFetch({\n\t\ttankId: \"\",\n\t\tWtrLvlMin: \"\",\n\t\tWtrLvlMax: \"\",\n\t\tOxygenPercentageMin: \"\",\n\t\tOxygenPercentageMax: \"\",\n\t\tPhMin: \"\",\n\t\tPhMax: \"\",\n\t});\n\tconst [pageState, setPageState] = useState({\n\t\tisBusy: false,\n\t\tmsg: \"\",\n\t\talertSeverity: \"success\",\n\t});\n\n\tconst updateTank = (event, prop) => {\n\t\tsetTank({\n\t\t\t...tank,\n\t\t\t[prop]: event.target.value,\n\t\t});\n\t};\n\tconst updateTankParametersFields = (parameters, tankId) => {\n\t\tlet tank = {\n\t\t\ttankId: tankId,\n\t\t\tWtrLvlMin: \"\",\n\t\t\tWtrLvlMax: \"\",\n\t\t\tOxygenPercentageMin: \"\",\n\t\t\tOxygenPercentageMax: \"\",\n\t\t\tPhMin: \"\",\n\t\t\tPhMax: \"\",\n\t\t};\n\t\tparameters.forEach((parameter, index) => {\n\t\t\tif (parameter.parameter === \"WtrLvl\") {\n\t\t\t\ttank.WtrLvlMin = parameter.tankMinValue;\n\t\t\t\ttank.WtrLvlMax = parameter.tankMaxValue;\n\t\t\t} else if (parameter.parameter === \"OxygenPercentage\") {\n\t\t\t\ttank.OxygenPercentageMin = parameter.tankMinValue;\n\t\t\t\ttank.OxygenPercentageMax = parameter.tankMaxValue;\n\t\t\t} else if (parameter.parameter === \"Ph\") {\n\t\t\t\ttank.PhMin = parameter.tankMinValue;\n\t\t\t\ttank.PhMax = parameter.tankMaxValue;\n\t\t\t}\n\t\t});\n\t\tconsole.log(tank);\n\t\tsetTank(tank);\n\t};\n\tconst fetchTank = async () => {\n\t\ttry {\n\t\t\tconst jsonData = await doFetch(\"GET\", apiModes.FETCHTANK, true, {\n\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t\ttankId: location.state.tankId,\n\t\t\t});\n\t\t\tconsole.log(jsonData);\n\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\tnavigate(\"/log-in\");\n\t\t\t} else if (jsonData.msg === \"Successfully fetched\") {\n\t\t\t\tupdateTankParametersFields(jsonData.parameters, jsonData.tankId);\n\t\t\t\tsetPageState({\n\t\t\t\t\tisBusy: false,\n\t\t\t\t\tmsg: jsonData.msg,\n\t\t\t\t\talertSeverity: \"success\",\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (error) {\n\t\t\terrorAction(error);\n\t\t}\n\t};\n\n\tconst handleUpdateTank = async (e) => {\n\t\ttry {\n\t\t\tconsole.log(tank);\n\t\t\tsetPageState({\n\t\t\t\tisBusy: true,\n\t\t\t\tmsg: \"\",\n\t\t\t});\n\n\t\t\tconst jsonData = await doFetch(\"POST\", apiModes.UPDATETANK, true, {\n\t\t\t\ttankId: tank.tankId,\n\t\t\t\tWtrLvlMin: tank.WtrLvlMin,\n\t\t\t\tWtrLvlMax: tank.WtrLvlMax,\n\t\t\t\tOxygenPercentageMin: tank.OxygenPercentageMin,\n\t\t\t\tOxygenPercentageMax: tank.OxygenPercentageMax,\n\t\t\t\tPhMin: tank.PhMin,\n\t\t\t\tPhMax: tank.PhMax,\n\t\t\t\taccessToken: localStorage.getItem(\"accessToken\"),\n\t\t\t});\n\t\t\tif (jsonData.msg === \"Token has expired\") {\n\t\t\t\tnavigate(\"log-in\");\n\t\t\t} else if (jsonData.msg === \"Succesfully updated\") {\n\t\t\t\tsetPageState({\n\t\t\t\t\t...pageState,\n\t\t\t\t\tmsg: jsonData.msg,\n\t\t\t\t\talertSeverity: \"success\",\n\t\t\t\t\tisBusy: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Unhandled Exception ${jsonData.msg}, please handle it.`\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\terrorAction(error);\n\t\t}\n\t};\n\tconst errorAction = (error) => {\n\t\tlet msg = \"\";\n\t\tif (error.message.includes(\"Unhandled Exception\")) {\n\t\t\tmsg = error.message;\n\t\t} else if (error.message === \"Failed to fetch\") {\n\t\t\tmsg = \"Please check your internet connection and try again.\";\n\t\t}\n\n\t\tsetPageState({\n\t\t\t...pageState,\n\t\t\tisBusy: false,\n\t\t\tmsg: msg,\n\t\t\talertSeverity: \"error\",\n\t\t});\n\t};\n\tuseEffect(() => {\n\t\tfetchTank();\n\t}, []);\n\treturn (\n\t\t<Box\n\t\t\tcomponent='form'\n\t\t\tnoValidate\n\t\t\tsx={{\n\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\tmarginRight: \"auto\",\n\t\t\t\tmarginTop: \"100px\",\n\t\t\t\tpadding: \"10px\",\n\t\t\t\twidth: \"50%\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\tbackgroundColor: \"rgba(255,255,255, 0.8)\",\n\t\t\t\tborderRadius: \"15px\",\n\t\t\t\ttextAlign: \"center\",\n\t\t\t}}\n\t\t\tautoComplete='off'>\n\t\t\t{pageState.alertSeverity ? (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h1>Please type new values</h1>\n\t\t\t\t\t<div style={{ marginTop: \"5px\", marginBottom: \"10px\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\tlabel='Tank Id'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={tank.tankId}\n\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\tonChange={(e) => updateTank(e, \"tankId\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Divider>Water Level Values</Divider>\n\t\t\t\t\t<div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tsx={{}}\n\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\tlabel='Min'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={tank.WtrLvlMin}\n\t\t\t\t\t\t\tonChange={(e) => updateTank(e, \"WtrLvlMin\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\tlabel='Max'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={tank.WtrLvlMax}\n\t\t\t\t\t\t\tonChange={(e) => updateTank(e, \"WtrLvlMax\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Divider>%Oxygen Values</Divider>\n\t\t\t\t\t<div style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tsx={{}}\n\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\tlabel='Min'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={tank.OxygenPercentageMin}\n\t\t\t\t\t\t\tonChange={(e) => updateTank(e, \"OxygenPercentageMin\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\tlabel='Max'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={tank.OxygenPercentageMax}\n\t\t\t\t\t\t\tonChange={(e) => updateTank(e, \"OxygenPercentageMax\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Divider>PH Values</Divider>\n\t\t\t\t\t<div style={{ marginTop: \"10px\" }}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tsx={{}}\n\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\tlabel='Min'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={tank.PhMin}\n\t\t\t\t\t\t\tonChange={(e) => updateTank(e, \"PhMin\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='outlined-basic'\n\t\t\t\t\t\t\tlabel='Max'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={tank.PhMax}\n\t\t\t\t\t\t\tonChange={(e) => updateTank(e, \"PhMax\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ display: pageState.isBusy ? \"block\" : \"none\" }}>\n\t\t\t\t\t\t<CircularProgress />\n\t\t\t\t\t</div>\n\t\t\t\t\t{pageState.msg ? (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: \"70%\",\n\t\t\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\t\t\t\tmarginTop: \"10px\",\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Alert severity={pageState.alertSeverity}>{pageState.msg}</Alert>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Link to=\"/tanks\">Go to tanks</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ marginTop: \"10px\" }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\twidth: \"50%\",\n\t\t\t\t\t\t\t\tborderRadius: \"15px\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={(e) => handleUpdateTank(e)}>\n\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t) : (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\tvariant='rectangular'\n\t\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\t\theight={50}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\t\t\tmarginBottom: \"10px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\tvariant='rectangular'\n\t\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\t\theight={50}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\t\t\tmarginBottom: \"10px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\tvariant='rectangular'\n\t\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\t\theight={50}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\t\t\tmarginBottom: \"10px\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Skeleton\n\t\t\t\t\t\tvariant='rectangular'\n\t\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\t\theight={50}\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t)}\n\t\t</Box>\n\t);\n}\n","export default __webpack_public_path__ + \"static/media/historicchart.675411dc.PNG\";","import React, { useState, useMemo, useEffect } from \"react\"; \nimport SignUp from './pages/SignUp';\nimport Users from './pages/Users';\nimport LogIn from \"./pages/LogIn\";\nimport UserUpdate from './pages/UserUpdate';\nimport Tanks from './pages/Tanks';\nimport AddTank from './pages/AddTank';\nimport Historic from './pages/Historic';\nimport DetailsTank from \"./pages/DetailsTank\";\nimport TanksMonitor from \"./pages/TanksMonitor\";\nimport NavBar from \"./components/NavBar\";\nimport Profile from \"./pages/Profile\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n//import { ThemeProvider } from \"./ThemeContext\";\nimport { UserContext, NavigationContext, TankContext } from './components/Context';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport ModifyTank from \"./pages/ModifyTank\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  const [navigation, setNavigation] = useState({\n    currentPage: \"\"\n  });\n  const [user, setUser] = useState({\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    company: \"\",\n    access_token: \"\"\n  });\n  const [tankContextData, setTankContextData] = useState({\n    tankSelected: \"\"\n  });\n\n  const providerNavigation = useMemo(() => ({navigation, setNavigation}), [navigation, setNavigation]);\n  const providerUser = useMemo(() => ({user, setUser}), [user, setUser]);\n  const providerTank = useMemo(() => ({tankContextData, setTankContextData}), [tankContextData, setTankContextData]);\n\n  useEffect(() => {\n    if(!user.name) {\n      setUser({\n        name: localStorage.getItem(\"name\"),\n        lastName: localStorage.getItem(\"lastName\"),\n        email: localStorage.getItem(\"email\"),\n        company: localStorage.getItem(\"company\")\n      })\n    }\n  }, [])\n\n  return (\n    <Router>\n      <NavigationContext.Provider value={providerNavigation}>\n        <UserContext.Provider value={providerUser}>\n          <TankContext.Provider value={providerTank}>\n            <NavBar />\n            <Routes>\n              <Route path=\"/\" element={<LogIn/>} />\n              <Route path=\"/sign-up\" element={<SignUp />} />\n              <Route path=\"/log-in\" element={<LogIn/>} />\n              <Route path=\"/tanks-monitor\" element={<TanksMonitor/>} />\n              <Route path=\"/profile\" element={<Profile/>} />\n              <Route path=\"/users\" element={<Users/>} />\n              <Route path=\"/tanks\" element={<Tanks/>} />\n              <Route path=\"/add-tank\" element={<AddTank/>} />\n              <Route path=\"/modify-tank\" element={<ModifyTank/>} />\n              <Route path=\"/details-tank\" element={<DetailsTank/>} />\n              <Route path=\"/historic\" element={<LocalizationProvider dateAdapter={AdapterDateFns}><Historic/></LocalizationProvider>} />\n              <Route path=\"/update-user\" element={<UserUpdate/>} />\n            </Routes>\n          </TankContext.Provider>\n        </UserContext.Provider>\n      </NavigationContext.Provider>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}